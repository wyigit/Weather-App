{"ast":null,"code":"var _jsxFileName = \"/Users/yigitdemirel/snake/src/components/SnakeGame.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Game = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const [snake, setSnake] = useState([{\n    x: 50,\n    y: 50\n  }]);\n  const [food, setFood] = useState({\n    x: Math.random() * window.innerWidth,\n    y: Math.random() * window.innerHeight\n  });\n  const snakeSize = 20;\n  const speed = 10;\n  let dx = speed;\n  let dy = 0;\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight;\n    const handleKeydown = e => {\n      switch (e.key) {\n        case 'ArrowUp':\n          dx = 0;\n          dy = -speed;\n          break;\n        case 'ArrowDown':\n          dx = 0;\n          dy = speed;\n          break;\n        case 'ArrowLeft':\n          dx = -speed;\n          dy = 0;\n          break;\n        case 'ArrowRight':\n          dx = speed;\n          dy = 0;\n          break;\n        default:\n          break;\n      }\n    };\n    const gameLoop = () => {\n      const head = {\n        x: snake[0].x + dx,\n        y: snake[0].y + dy\n      };\n\n      // Sınır kontrolü\n      if (head.x < 0 || head.x > canvas.width || head.y < 0 || head.y > canvas.height) {\n        // Oyun biter, tekrar başlatılabilir.\n        return;\n      }\n\n      // Yemle çarpışma kontrolü\n      if (Math.abs(head.x - food.x) < snakeSize && Math.abs(head.y - food.y) < snakeSize) {\n        // Yem yendiyse yılan büyür\n        setFood({\n          x: Math.random() * canvas.width,\n          y: Math.random() * canvas.height\n        });\n      } else {\n        snake.pop();\n      }\n      snake.unshift(head);\n\n      // Çizim işlemi\n      context.clearRect(0, 0, canvas.width, canvas.height);\n\n      // Yılanı çiz\n      snake.forEach((segment, index) => {\n        context.beginPath();\n        context.arc(segment.x, segment.y, snakeSize / 2, 0, 2 * Math.PI);\n        context.fillStyle = index === 0 ? 'orange' : 'green'; // Kafa turuncu, gövde yeşil\n        context.fill();\n        context.strokeStyle = 'darkgreen';\n        context.stroke();\n      });\n\n      // Yemi çiz\n      context.beginPath();\n      context.arc(food.x, food.y, snakeSize / 2, 0, 2 * Math.PI);\n      context.fillStyle = 'red';\n      context.fill();\n      requestAnimationFrame(gameLoop);\n    };\n    window.addEventListener('keydown', handleKeydown);\n    gameLoop();\n    return () => {\n      window.removeEventListener('keydown', handleKeydown);\n    };\n  }, [snake, food]);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 10\n  }, this);\n};\n_s(Game, \"rEGb3eC4vuPTKo2BXYWQeHu10d4=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","Game","_s","canvasRef","snake","setSnake","x","y","food","setFood","Math","random","window","innerWidth","innerHeight","snakeSize","speed","dx","dy","canvas","current","context","getContext","width","height","handleKeydown","e","key","gameLoop","head","abs","pop","unshift","clearRect","forEach","segment","index","beginPath","arc","PI","fillStyle","fill","strokeStyle","stroke","requestAnimationFrame","addEventListener","removeEventListener","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/yigitdemirel/snake/src/components/SnakeGame.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\n\nconst Game = () => {\n  const canvasRef = useRef(null);\n  const [snake, setSnake] = useState([{ x: 50, y: 50 }]);\n  const [food, setFood] = useState({ x: Math.random() * window.innerWidth, y: Math.random() * window.innerHeight });\n  const snakeSize = 20;\n  const speed = 10;\n  let dx = speed;\n  let dy = 0;\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight;\n\n    const handleKeydown = (e) => {\n      switch (e.key) {\n        case 'ArrowUp':\n          dx = 0;\n          dy = -speed;\n          break;\n        case 'ArrowDown':\n          dx = 0;\n          dy = speed;\n          break;\n        case 'ArrowLeft':\n          dx = -speed;\n          dy = 0;\n          break;\n        case 'ArrowRight':\n          dx = speed;\n          dy = 0;\n          break;\n        default:\n          break;\n      }\n    };\n\n    const gameLoop = () => {\n      const head = { x: snake[0].x + dx, y: snake[0].y + dy };\n\n      // Sınır kontrolü\n      if (head.x < 0 || head.x > canvas.width || head.y < 0 || head.y > canvas.height) {\n        // Oyun biter, tekrar başlatılabilir.\n        return;\n      }\n\n      // Yemle çarpışma kontrolü\n      if (Math.abs(head.x - food.x) < snakeSize && Math.abs(head.y - food.y) < snakeSize) {\n        // Yem yendiyse yılan büyür\n        setFood({ x: Math.random() * canvas.width, y: Math.random() * canvas.height });\n      } else {\n        snake.pop();\n      }\n\n      snake.unshift(head);\n\n      // Çizim işlemi\n      context.clearRect(0, 0, canvas.width, canvas.height);\n\n      // Yılanı çiz\n      snake.forEach((segment, index) => {\n        context.beginPath();\n        context.arc(segment.x, segment.y, snakeSize / 2, 0, 2 * Math.PI);\n        context.fillStyle = index === 0 ? 'orange' : 'green'; // Kafa turuncu, gövde yeşil\n        context.fill();\n        context.strokeStyle = 'darkgreen';\n        context.stroke();\n      });\n\n      // Yemi çiz\n      context.beginPath();\n      context.arc(food.x, food.y, snakeSize / 2, 0, 2 * Math.PI);\n      context.fillStyle = 'red';\n      context.fill();\n\n      requestAnimationFrame(gameLoop);\n    };\n\n    window.addEventListener('keydown', handleKeydown);\n\n    gameLoop();\n\n    return () => {\n      window.removeEventListener('keydown', handleKeydown);\n    };\n  }, [snake, food]);\n\n  return <canvas ref={canvasRef} />;\n};\n\nexport default Game;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}