{"ast":null,"code":"var _jsxFileName = \"/Users/yigitdemirel/snake/src/components/SnakeGame.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../components/SnakeGame.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SnakeGame = () => {\n  _s();\n  const [snake, setSnake] = useState([[5, 5]]); // Yılanın başlangıç pozisyonu\n  const [direction, setDirection] = useState('RIGHT');\n  const [food, setFood] = useState([Math.floor(Math.random() * 20), Math.floor(Math.random() * 20)]);\n  const [speed, setSpeed] = useState(500); // Başlangıç hızı\n  const [score, setScore] = useState(0);\n\n  // Yönü değiştiren fonksiyon\n  const handleDirection = e => {\n    if (e.key === 'ArrowUp' && direction !== 'DOWN') setDirection('UP');else if (e.key === 'ArrowDown' && direction !== 'UP') setDirection('DOWN');else if (e.key === 'ArrowLeft' && direction !== 'RIGHT') setDirection('LEFT');else if (e.key === 'ArrowRight' && direction !== 'LEFT') setDirection('RIGHT');\n  };\n\n  // Oyun döngüsü\n  useEffect(() => {\n    const moveSnake = () => {\n      let newSnake = [...snake];\n      let head = newSnake[0];\n      switch (direction) {\n        case 'RIGHT':\n          head = [head[0], head[1] + 1];\n          break;\n        case 'LEFT':\n          head = [head[0], head[1] - 1];\n          break;\n        case 'UP':\n          head = [head[0] - 1, head[1]];\n          break;\n        case 'DOWN':\n          head = [head[0] + 1, head[1]];\n          break;\n        default:\n          break;\n      }\n\n      // Yılanın başı yemle aynı pozisyonda mı kontrol et\n      if (head[0] === food[0] && head[1] === food[1]) {\n        setScore(score + 1);\n        setFood([Math.floor(Math.random() * 20), Math.floor(Math.random() * 20)]);\n      } else {\n        newSnake.pop();\n      }\n      newSnake.unshift(head);\n      setSnake(newSnake);\n    };\n    const gameInterval = setInterval(moveSnake, speed);\n    return () => clearInterval(gameInterval);\n  }, [snake, direction]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-board\",\n    children: [snake.map((segment, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"snake-segment\",\n      style: {\n        top: `${segment[0]}%`,\n        left: `${segment[1]}%`\n      }\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"food\",\n      style: {\n        top: `${food[0]}%`,\n        left: `${food[1]}%`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Score: \", score]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(SnakeGame, \"/d9EzVJtlvbWVEunCQDJu0gyubc=\");\n_c = SnakeGame;\nexport default SnakeGame;\nvar _c;\n$RefreshReg$(_c, \"SnakeGame\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","SnakeGame","_s","snake","setSnake","direction","setDirection","food","setFood","Math","floor","random","speed","setSpeed","score","setScore","handleDirection","e","key","moveSnake","newSnake","head","pop","unshift","gameInterval","setInterval","clearInterval","className","children","map","segment","index","style","top","left","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/yigitdemirel/snake/src/components/SnakeGame.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport '../components/SnakeGame.css'\nconst SnakeGame = () => {\n  const [snake, setSnake] = useState([[5, 5]]); // Yılanın başlangıç pozisyonu\n  const [direction, setDirection] = useState('RIGHT');\n  const [food, setFood] = useState([Math.floor(Math.random() * 20), Math.floor(Math.random() * 20)]);\n  const [speed, setSpeed] = useState(500); // Başlangıç hızı\n  const [score, setScore] = useState(0);\n\n  // Yönü değiştiren fonksiyon\n  const handleDirection = (e) => {\n    if (e.key === 'ArrowUp' && direction !== 'DOWN') setDirection('UP');\n    else if (e.key === 'ArrowDown' && direction !== 'UP') setDirection('DOWN');\n    else if (e.key === 'ArrowLeft' && direction !== 'RIGHT') setDirection('LEFT');\n    else if (e.key === 'ArrowRight' && direction !== 'LEFT') setDirection('RIGHT');\n  };\n\n  // Oyun döngüsü\n  useEffect(() => {\n    const moveSnake = () => {\n      let newSnake = [...snake];\n      let head = newSnake[0];\n\n      switch (direction) {\n        case 'RIGHT':\n          head = [head[0], head[1] + 1];\n          break;\n        case 'LEFT':\n          head = [head[0], head[1] - 1];\n          break;\n        case 'UP':\n          head = [head[0] - 1, head[1]];\n          break;\n        case 'DOWN':\n          head = [head[0] + 1, head[1]];\n          break;\n        default:\n          break;\n      }\n\n      // Yılanın başı yemle aynı pozisyonda mı kontrol et\n      if (head[0] === food[0] && head[1] === food[1]) {\n        setScore(score + 1);\n        setFood([Math.floor(Math.random() * 20), Math.floor(Math.random() * 20)]);\n      } else {\n        newSnake.pop();\n      }\n\n      newSnake.unshift(head);\n      setSnake(newSnake);\n    };\n\n    const gameInterval = setInterval(moveSnake, speed);\n    return () => clearInterval(gameInterval);\n  }, [snake, direction]);\n\n  return (\n    <div className=\"game-board\">\n      {/* Yılanın oyun tahtasında render edilmesi */}\n      {snake.map((segment, index) => (\n        <div key={index} className=\"snake-segment\" style={{ top: `${segment[0]}%`, left: `${segment[1]}%` }} />\n      ))}\n      {/* Yem */}\n      <div className=\"food\" style={{ top: `${food[0]}%`, left: `${food[1]}%` }} />\n      <h2>Score: {score}</h2>\n    </div>\n  );\n};\n\nexport default SnakeGame;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}