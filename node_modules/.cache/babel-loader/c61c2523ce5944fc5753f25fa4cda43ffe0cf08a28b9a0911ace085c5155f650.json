{"ast":null,"code":"var _jsxFileName = \"/Users/yigitdemirel/snake/src/components/SnakeGame.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './SnakeGame.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SnakeGame = () => {\n  _s();\n  const boardSize = 20;\n  const [snake, setSnake] = useState([{\n    x: 10,\n    y: 10\n  }]);\n  const [food, setFood] = useState({\n    x: Math.floor(Math.random() * boardSize),\n    y: Math.floor(Math.random() * boardSize)\n  });\n  const [direction, setDirection] = useState({\n    x: 0,\n    y: 1\n  });\n  const [gameOver, setGameOver] = useState(false);\n  const [score, setScore] = useState(0);\n  useEffect(() => {\n    const handleKeyPress = e => {\n      switch (e.key) {\n        case 'ArrowUp':\n          setDirection({\n            x: 0,\n            y: -1\n          });\n          break;\n        case 'ArrowDown':\n          setDirection({\n            x: 0,\n            y: 1\n          });\n          break;\n        case 'ArrowLeft':\n          setDirection({\n            x: -1,\n            y: 0\n          });\n          break;\n        case 'ArrowRight':\n          setDirection({\n            x: 1,\n            y: 0\n          });\n          break;\n        default:\n          break;\n      }\n    };\n    window.addEventListener('keydown', handleKeyPress);\n    return () => window.removeEventListener('keydown', handleKeyPress);\n  }, []);\n  useEffect(() => {\n    if (!gameOver) {\n      const moveSnake = setInterval(() => {\n        const newSnake = [...snake];\n        const head = {\n          x: newSnake[0].x + direction.x,\n          y: newSnake[0].y + direction.y\n        };\n\n        // Yılan yemi yerse\n        if (head.x === food.x && head.y === food.y) {\n          newSnake.unshift(food);\n          setFood({\n            x: Math.floor(Math.random() * boardSize),\n            y: Math.floor(Math.random() * boardSize)\n          });\n          setScore(score + 1);\n        } else {\n          newSnake.pop();\n        }\n\n        // Yılanın oyun sınırlarını aşması durumunda oyunun bitmesini önlüyoruz\n        // Yılan ekranın diğer ucundan geçsin\n        head.x = (head.x + boardSize) % boardSize;\n        head.y = (head.y + boardSize) % boardSize;\n\n        // Çarpışma kontrolü yok\n        newSnake.unshift(head);\n        setSnake(newSnake);\n      }, 150);\n      return () => clearInterval(moveSnake);\n    }\n  }, [snake, direction, food, gameOver]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"snake-game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"score\",\n      children: [\"Score: \", score]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), gameOver ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-over\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Game Over\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Score: \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setSnake([{\n            x: 10,\n            y: 10\n          }]);\n          setDirection({\n            x: 0,\n            y: 1\n          });\n          setFood({\n            x: Math.floor(Math.random() * boardSize),\n            y: Math.floor(Math.random() * boardSize)\n          });\n          setScore(0);\n          setGameOver(false);\n        },\n        children: \"Restart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      children: Array.from({\n        length: boardSize\n      }).map((_, row) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: Array.from({\n          length: boardSize\n        }).map((_, col) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `cell ${snake.some(s => s.x === col && s.y === row) ? 'snake' : ''} ${food.x === col && food.y === row ? 'food' : ''}`\n        }, col, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 17\n        }, this))\n      }, row, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(SnakeGame, \"K4YezxiW5+uFQZMXFgRNEcgaTMQ=\");\n_c = SnakeGame;\nexport default SnakeGame;\nvar _c;\n$RefreshReg$(_c, \"SnakeGame\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","SnakeGame","_s","boardSize","snake","setSnake","x","y","food","setFood","Math","floor","random","direction","setDirection","gameOver","setGameOver","score","setScore","handleKeyPress","e","key","window","addEventListener","removeEventListener","moveSnake","setInterval","newSnake","head","unshift","pop","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","Array","from","length","map","_","row","col","some","s","_c","$RefreshReg$"],"sources":["/Users/yigitdemirel/snake/src/components/SnakeGame.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './SnakeGame.css';\n\nconst SnakeGame = () => {\n  const boardSize = 20;\n  const [snake, setSnake] = useState([{ x: 10, y: 10 }]);\n  const [food, setFood] = useState({\n    x: Math.floor(Math.random() * boardSize),\n    y: Math.floor(Math.random() * boardSize),\n  });\n  const [direction, setDirection] = useState({ x: 0, y: 1 });\n  const [gameOver, setGameOver] = useState(false);\n  const [score, setScore] = useState(0);\n\n  useEffect(() => {\n    const handleKeyPress = (e) => {\n      switch (e.key) {\n        case 'ArrowUp':\n          setDirection({ x: 0, y: -1 });\n          break;\n        case 'ArrowDown':\n          setDirection({ x: 0, y: 1 });\n          break;\n        case 'ArrowLeft':\n          setDirection({ x: -1, y: 0 });\n          break;\n        case 'ArrowRight':\n          setDirection({ x: 1, y: 0 });\n          break;\n        default:\n          break;\n      }\n    };\n    window.addEventListener('keydown', handleKeyPress);\n    return () => window.removeEventListener('keydown', handleKeyPress);\n  }, []);\n\n  useEffect(() => {\n    if (!gameOver) {\n      const moveSnake = setInterval(() => {\n        const newSnake = [...snake];\n        const head = { x: newSnake[0].x + direction.x, y: newSnake[0].y + direction.y };\n\n        // Yılan yemi yerse\n        if (head.x === food.x && head.y === food.y) {\n          newSnake.unshift(food);\n          setFood({\n            x: Math.floor(Math.random() * boardSize),\n            y: Math.floor(Math.random() * boardSize),\n          });\n          setScore(score + 1);\n        } else {\n          newSnake.pop();\n        }\n\n        // Yılanın oyun sınırlarını aşması durumunda oyunun bitmesini önlüyoruz\n        // Yılan ekranın diğer ucundan geçsin\n        head.x = (head.x + boardSize) % boardSize;\n        head.y = (head.y + boardSize) % boardSize;\n\n        // Çarpışma kontrolü yok\n        newSnake.unshift(head);\n        setSnake(newSnake);\n      }, 150);\n\n      return () => clearInterval(moveSnake);\n    }\n  }, [snake, direction, food, gameOver]);\n\n  return (\n    <div className=\"snake-game\">\n      <div className=\"score\">Score: {score}</div>\n      {gameOver ? (\n        <div className=\"game-over\">\n          <h1>Game Over</h1>\n          <p>Score: {score}</p>\n          <button\n            onClick={() => {\n              setSnake([{ x: 10, y: 10 }]);\n              setDirection({ x: 0, y: 1 });\n              setFood({\n                x: Math.floor(Math.random() * boardSize),\n                y: Math.floor(Math.random() * boardSize),\n              });\n              setScore(0);\n              setGameOver(false);\n            }}\n          >\n            Restart\n          </button>\n        </div>\n      ) : (\n        <div className=\"board\">\n          {Array.from({ length: boardSize }).map((_, row) => (\n            <div key={row} className=\"row\">\n              {Array.from({ length: boardSize }).map((_, col) => (\n                <div\n                  key={col}\n                  className={`cell ${\n                    snake.some((s) => s.x === col && s.y === row) ? 'snake' : ''\n                  } ${food.x === col && food.y === row ? 'food' : ''}`}\n                ></div>\n              ))}\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default SnakeGame;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}