{"ast":null,"code":"var _jsxFileName = \"/Users/yigitdemirel/snake/src/components/SnakeGame.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Game = () => {\n  _s();\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n\n    // Canvas boyutlarını belirle\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight;\n\n    // Yılan başlangıç noktası\n    let snake = [{\n      x: 50,\n      y: 50\n    }];\n    const snakeSize = 10;\n    const speed = 10;\n    const gameLoop = () => {\n      // Canvas'ı temizle\n      context.clearRect(0, 0, canvas.width, canvas.height);\n\n      // Yılanı çiz\n      snake.forEach(segment => {\n        context.fillStyle = 'green';\n        context.fillRect(segment.x, segment.y, snakeSize, snakeSize);\n      });\n\n      // Oyun döngüsünü devam ettir\n      requestAnimationFrame(gameLoop);\n    };\n\n    // Klavye ile yılanın hareketini kontrol et\n    let dx = speed;\n    let dy = 0;\n    const handleKeydown = e => {\n      switch (e.key) {\n        case 'ArrowUp':\n          dx = 0;\n          dy = -speed;\n          break;\n        case 'ArrowDown':\n          dx = 0;\n          dy = speed;\n          break;\n        case 'ArrowLeft':\n          dx = -speed;\n          dy = 0;\n          break;\n        case 'ArrowRight':\n          dx = speed;\n          dy = 0;\n          break;\n        default:\n          break;\n      }\n    };\n    window.addEventListener('keydown', handleKeydown);\n    const gameLoopWithMovement = () => {\n      // Yılanın başını hareket ettir\n      const head = {\n        x: snake[0].x + dx,\n        y: snake[0].y + dy\n      };\n\n      // Yılanın başını ekle\n      snake.unshift(head);\n\n      // Yılanın kuyruğunu kes\n      snake.pop();\n\n      // Canvas'ı temizle ve yılanı tekrar çiz\n      context.clearRect(0, 0, canvas.width, canvas.height);\n      snake.forEach(segment => {\n        context.fillStyle = 'green';\n        context.fillRect(segment.x, segment.y, snakeSize, snakeSize);\n      });\n      requestAnimationFrame(gameLoopWithMovement);\n    };\n    gameLoopWithMovement();\n    return () => window.removeEventListener('keydown', handleKeydown);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 10\n  }, this);\n};\n_s(Game, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useEffect","useRef","jsxDEV","_jsxDEV","Game","_s","canvasRef","canvas","current","context","getContext","width","window","innerWidth","height","innerHeight","snake","x","y","snakeSize","speed","gameLoop","clearRect","forEach","segment","fillStyle","fillRect","requestAnimationFrame","dx","dy","handleKeydown","e","key","addEventListener","gameLoopWithMovement","head","unshift","pop","removeEventListener","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/yigitdemirel/snake/src/components/SnakeGame.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\n\nconst Game = () => {\n  const canvasRef = useRef(null);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n\n    // Canvas boyutlarını belirle\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight;\n\n    // Yılan başlangıç noktası\n    let snake = [{ x: 50, y: 50 }];\n    const snakeSize = 10;\n    const speed = 10;\n\n    const gameLoop = () => {\n      // Canvas'ı temizle\n      context.clearRect(0, 0, canvas.width, canvas.height);\n\n      // Yılanı çiz\n      snake.forEach(segment => {\n        context.fillStyle = 'green';\n        context.fillRect(segment.x, segment.y, snakeSize, snakeSize);\n      });\n\n      // Oyun döngüsünü devam ettir\n      requestAnimationFrame(gameLoop);\n    };\n\n    // Klavye ile yılanın hareketini kontrol et\n    let dx = speed;\n    let dy = 0;\n\n    const handleKeydown = (e) => {\n      switch (e.key) {\n        case 'ArrowUp':\n          dx = 0;\n          dy = -speed;\n          break;\n        case 'ArrowDown':\n          dx = 0;\n          dy = speed;\n          break;\n        case 'ArrowLeft':\n          dx = -speed;\n          dy = 0;\n          break;\n        case 'ArrowRight':\n          dx = speed;\n          dy = 0;\n          break;\n        default:\n          break;\n      }\n    };\n\n    window.addEventListener('keydown', handleKeydown);\n\n    const gameLoopWithMovement = () => {\n      // Yılanın başını hareket ettir\n      const head = { x: snake[0].x + dx, y: snake[0].y + dy };\n\n      // Yılanın başını ekle\n      snake.unshift(head);\n\n      // Yılanın kuyruğunu kes\n      snake.pop();\n\n      // Canvas'ı temizle ve yılanı tekrar çiz\n      context.clearRect(0, 0, canvas.width, canvas.height);\n      snake.forEach(segment => {\n        context.fillStyle = 'green';\n        context.fillRect(segment.x, segment.y, snakeSize, snakeSize);\n      });\n\n      requestAnimationFrame(gameLoopWithMovement);\n    };\n\n    gameLoopWithMovement();\n\n    return () => window.removeEventListener('keydown', handleKeydown);\n  }, []);\n\n  return <canvas ref={canvasRef} />;\n};\n\nexport default Game;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}