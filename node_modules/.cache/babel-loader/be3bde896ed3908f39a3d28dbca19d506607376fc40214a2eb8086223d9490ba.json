{"ast":null,"code":"var _jsxFileName = \"/Users/yigitdemirel/snake/src/components/SnakeGame.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../components/SnakeGame.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SnakeGame = () => {\n  _s();\n  const initialSnake = [{\n    x: 12,\n    y: 12\n  }];\n  const initialDirection = {\n    x: 1,\n    y: 0\n  };\n  const [snake, setSnake] = useState(initialSnake);\n  const [food, setFood] = useState(generateFoodPosition(initialSnake));\n  const [direction, setDirection] = useState(initialDirection);\n  const [gameOver, setGameOver] = useState(false);\n  const moveSnake = () => {\n    if (gameOver) return;\n    setSnake(prevSnake => {\n      const newSnake = [...prevSnake];\n      const head = {\n        x: newSnake[0].x + direction.x,\n        y: newSnake[0].y + direction.y\n      };\n      if (newSnake.some(segment => segment.x === head.x && segment.y === head.y)) {\n        setGameOver(true);\n        return prevSnake;\n      }\n      newSnake.unshift(head);\n      if (head.x === food.x && head.y === food.y) {\n        setFood(generateFoodPosition(newSnake));\n      } else {\n        newSnake.pop();\n      }\n      return newSnake;\n    });\n  };\n  const generateFoodPosition = snake => {\n    let newFood;\n    do {\n      newFood = {\n        x: Math.floor(Math.random() * 25),\n        y: Math.floor(Math.random() * 25)\n      };\n    } while (snake.some(segment => segment.x === newFood.x && segment.y === newFood.y));\n    return newFood;\n  };\n  const handleKeyPress = e => {\n    if (gameOver) return;\n    switch (e.key) {\n      case 'ArrowUp':\n        if (direction.y === 0) setDirection({\n          x: 0,\n          y: -1\n        });\n        break;\n      case 'ArrowDown':\n        if (direction.y === 0) setDirection({\n          x: 0,\n          y: 1\n        });\n        break;\n      case 'ArrowLeft':\n        if (direction.x === 0) setDirection({\n          x: -1,\n          y: 0\n        });\n        break;\n      case 'ArrowRight':\n        if (direction.x === 0) setDirection({\n          x: 1,\n          y: 0\n        });\n        break;\n      default:\n        break;\n    }\n  };\n  useEffect(() => {\n    if (gameOver) return;\n    const interval = setInterval(() => {\n      moveSnake();\n    }, 100);\n    window.addEventListener('keydown', handleKeyPress);\n    return () => {\n      clearInterval(interval);\n      window.removeEventListener('keydown', handleKeyPress);\n    };\n  }, [direction, gameOver]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-area\",\n      children: Array.from({\n        length: 25\n      }).map((_, y) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: Array.from({\n          length: 25\n        }).map((_, x) => {\n          const isSnake = snake.some(segment => segment.x === x && segment.y === y);\n          const isFood = food.x === x && food.y === y;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `cell ${isSnake ? 'snake' : ''} ${isFood ? 'food' : ''}`\n          }, x, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 36\n          }, this);\n        })\n      }, y, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), gameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-over-box\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Oyun Bitti!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n};\n_s(SnakeGame, \"mb0q7GO1ykwiB/4W86Y1p67J2SY=\");\n_c = SnakeGame;\nexport default SnakeGame;\nvar _c;\n$RefreshReg$(_c, \"SnakeGame\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","SnakeGame","_s","initialSnake","x","y","initialDirection","snake","setSnake","food","setFood","generateFoodPosition","direction","setDirection","gameOver","setGameOver","moveSnake","prevSnake","newSnake","head","some","segment","unshift","pop","newFood","Math","floor","random","handleKeyPress","e","key","interval","setInterval","window","addEventListener","clearInterval","removeEventListener","className","children","Array","from","length","map","_","isSnake","isFood","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/yigitdemirel/snake/src/components/SnakeGame.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport '../components/SnakeGame.css';\n\nconst SnakeGame = () => {\n    const initialSnake = [{ x: 12, y: 12 }];\n    const initialDirection = { x: 1, y: 0 };\n    const [snake, setSnake] = useState(initialSnake);\n    const [food, setFood] = useState(generateFoodPosition(initialSnake));\n    const [direction, setDirection] = useState(initialDirection);\n    const [gameOver, setGameOver] = useState(false);\n\n    const moveSnake = () => {\n        if (gameOver) return;\n\n        setSnake((prevSnake) => {\n            const newSnake = [...prevSnake];\n            const head = { x: newSnake[0].x + direction.x, y: newSnake[0].y + direction.y };\n\n            if (newSnake.some((segment) => segment.x === head.x && segment.y === head.y)) {\n                setGameOver(true);\n                return prevSnake; \n            }\n\n            newSnake.unshift(head); \n            if (head.x === food.x && head.y === food.y) {\n                setFood(generateFoodPosition(newSnake)); \n            } else {\n                newSnake.pop(); \n            }\n            return newSnake;\n        });\n    };\n\n    const generateFoodPosition = (snake) => {\n        let newFood;\n        do {\n            newFood = {\n                x: Math.floor(Math.random() * 25),\n                y: Math.floor(Math.random() * 25),\n            };\n        } while (snake.some((segment) => segment.x === newFood.x && segment.y === newFood.y)); \n        return newFood;\n    };\n\n    const handleKeyPress = (e) => {\n        if (gameOver) return; \n\n        switch (e.key) {\n            case 'ArrowUp':\n                if (direction.y === 0) setDirection({ x: 0, y: -1 });\n                break;\n            case 'ArrowDown':\n                if (direction.y === 0) setDirection({ x: 0, y: 1 });\n                break;\n            case 'ArrowLeft':\n                if (direction.x === 0) setDirection({ x: -1, y: 0 });\n                break;\n            case 'ArrowRight':\n                if (direction.x === 0) setDirection({ x: 1, y: 0 });\n                break;\n            default:\n                break;\n        }\n    };\n\n    useEffect(() => {\n        if (gameOver) return; \n\n        const interval = setInterval(() => {\n            moveSnake();\n        }, 100);\n\n        window.addEventListener('keydown', handleKeyPress);\n\n        return () => {\n            clearInterval(interval);\n            window.removeEventListener('keydown', handleKeyPress);\n        };\n    }, [direction, gameOver]);\n\n    return (\n        <div className=\"game-container\">\n            <div className=\"game-area\">\n                {Array.from({ length: 25 }).map((_, y) =>\n                    <div key={y} className=\"row\">\n                        {Array.from({ length: 25 }).map((_, x) => {\n                            const isSnake = snake.some(segment => segment.x === x && segment.y === y);\n                            const isFood = food.x === x && food.y === y;\n                            return <div key={x} className={`cell ${isSnake ? 'snake' : ''} ${isFood ? 'food' : ''}`} />;\n                        })}\n                    </div>\n                )}\n            </div>\n            {gameOver && (\n                <div className=\"game-over-box\">\n                    <h2>Oyun Bitti!</h2>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default SnakeGame;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAMC,YAAY,GAAG,CAAC;IAAEC,CAAC,EAAE,EAAE;IAAEC,CAAC,EAAE;EAAG,CAAC,CAAC;EACvC,MAAMC,gBAAgB,GAAG;IAAEF,CAAC,EAAE,CAAC;IAAEC,CAAC,EAAE;EAAE,CAAC;EACvC,MAAM,CAACE,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAACM,YAAY,CAAC;EAChD,MAAM,CAACM,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAACc,oBAAoB,CAACR,YAAY,CAAC,CAAC;EACpE,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAACS,gBAAgB,CAAC;EAC5D,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EAE/C,MAAMmB,SAAS,GAAGA,CAAA,KAAM;IACpB,IAAIF,QAAQ,EAAE;IAEdN,QAAQ,CAAES,SAAS,IAAK;MACpB,MAAMC,QAAQ,GAAG,CAAC,GAAGD,SAAS,CAAC;MAC/B,MAAME,IAAI,GAAG;QAAEf,CAAC,EAAEc,QAAQ,CAAC,CAAC,CAAC,CAACd,CAAC,GAAGQ,SAAS,CAACR,CAAC;QAAEC,CAAC,EAAEa,QAAQ,CAAC,CAAC,CAAC,CAACb,CAAC,GAAGO,SAAS,CAACP;MAAE,CAAC;MAE/E,IAAIa,QAAQ,CAACE,IAAI,CAAEC,OAAO,IAAKA,OAAO,CAACjB,CAAC,KAAKe,IAAI,CAACf,CAAC,IAAIiB,OAAO,CAAChB,CAAC,KAAKc,IAAI,CAACd,CAAC,CAAC,EAAE;QAC1EU,WAAW,CAAC,IAAI,CAAC;QACjB,OAAOE,SAAS;MACpB;MAEAC,QAAQ,CAACI,OAAO,CAACH,IAAI,CAAC;MACtB,IAAIA,IAAI,CAACf,CAAC,KAAKK,IAAI,CAACL,CAAC,IAAIe,IAAI,CAACd,CAAC,KAAKI,IAAI,CAACJ,CAAC,EAAE;QACxCK,OAAO,CAACC,oBAAoB,CAACO,QAAQ,CAAC,CAAC;MAC3C,CAAC,MAAM;QACHA,QAAQ,CAACK,GAAG,CAAC,CAAC;MAClB;MACA,OAAOL,QAAQ;IACnB,CAAC,CAAC;EACN,CAAC;EAED,MAAMP,oBAAoB,GAAIJ,KAAK,IAAK;IACpC,IAAIiB,OAAO;IACX,GAAG;MACCA,OAAO,GAAG;QACNpB,CAAC,EAAEqB,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC;QACjCtB,CAAC,EAAEoB,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,EAAE;MACpC,CAAC;IACL,CAAC,QAAQpB,KAAK,CAACa,IAAI,CAAEC,OAAO,IAAKA,OAAO,CAACjB,CAAC,KAAKoB,OAAO,CAACpB,CAAC,IAAIiB,OAAO,CAAChB,CAAC,KAAKmB,OAAO,CAACnB,CAAC,CAAC;IACpF,OAAOmB,OAAO;EAClB,CAAC;EAED,MAAMI,cAAc,GAAIC,CAAC,IAAK;IAC1B,IAAIf,QAAQ,EAAE;IAEd,QAAQe,CAAC,CAACC,GAAG;MACT,KAAK,SAAS;QACV,IAAIlB,SAAS,CAACP,CAAC,KAAK,CAAC,EAAEQ,YAAY,CAAC;UAAET,CAAC,EAAE,CAAC;UAAEC,CAAC,EAAE,CAAC;QAAE,CAAC,CAAC;QACpD;MACJ,KAAK,WAAW;QACZ,IAAIO,SAAS,CAACP,CAAC,KAAK,CAAC,EAAEQ,YAAY,CAAC;UAAET,CAAC,EAAE,CAAC;UAAEC,CAAC,EAAE;QAAE,CAAC,CAAC;QACnD;MACJ,KAAK,WAAW;QACZ,IAAIO,SAAS,CAACR,CAAC,KAAK,CAAC,EAAES,YAAY,CAAC;UAAET,CAAC,EAAE,CAAC,CAAC;UAAEC,CAAC,EAAE;QAAE,CAAC,CAAC;QACpD;MACJ,KAAK,YAAY;QACb,IAAIO,SAAS,CAACR,CAAC,KAAK,CAAC,EAAES,YAAY,CAAC;UAAET,CAAC,EAAE,CAAC;UAAEC,CAAC,EAAE;QAAE,CAAC,CAAC;QACnD;MACJ;QACI;IACR;EACJ,CAAC;EAEDP,SAAS,CAAC,MAAM;IACZ,IAAIgB,QAAQ,EAAE;IAEd,MAAMiB,QAAQ,GAAGC,WAAW,CAAC,MAAM;MAC/BhB,SAAS,CAAC,CAAC;IACf,CAAC,EAAE,GAAG,CAAC;IAEPiB,MAAM,CAACC,gBAAgB,CAAC,SAAS,EAAEN,cAAc,CAAC;IAElD,OAAO,MAAM;MACTO,aAAa,CAACJ,QAAQ,CAAC;MACvBE,MAAM,CAACG,mBAAmB,CAAC,SAAS,EAAER,cAAc,CAAC;IACzD,CAAC;EACL,CAAC,EAAE,CAAChB,SAAS,EAAEE,QAAQ,CAAC,CAAC;EAEzB,oBACId,OAAA;IAAKqC,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC3BtC,OAAA;MAAKqC,SAAS,EAAC,WAAW;MAAAC,QAAA,EACrBC,KAAK,CAACC,IAAI,CAAC;QAAEC,MAAM,EAAE;MAAG,CAAC,CAAC,CAACC,GAAG,CAAC,CAACC,CAAC,EAAEtC,CAAC,kBACjCL,OAAA;QAAaqC,SAAS,EAAC,KAAK;QAAAC,QAAA,EACvBC,KAAK,CAACC,IAAI,CAAC;UAAEC,MAAM,EAAE;QAAG,CAAC,CAAC,CAACC,GAAG,CAAC,CAACC,CAAC,EAAEvC,CAAC,KAAK;UACtC,MAAMwC,OAAO,GAAGrC,KAAK,CAACa,IAAI,CAACC,OAAO,IAAIA,OAAO,CAACjB,CAAC,KAAKA,CAAC,IAAIiB,OAAO,CAAChB,CAAC,KAAKA,CAAC,CAAC;UACzE,MAAMwC,MAAM,GAAGpC,IAAI,CAACL,CAAC,KAAKA,CAAC,IAAIK,IAAI,CAACJ,CAAC,KAAKA,CAAC;UAC3C,oBAAOL,OAAA;YAAaqC,SAAS,EAAE,QAAQO,OAAO,GAAG,OAAO,GAAG,EAAE,IAAIC,MAAM,GAAG,MAAM,GAAG,EAAE;UAAG,GAAvEzC,CAAC;YAAA0C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAwE,CAAC;QAC/F,CAAC;MAAC,GALI5C,CAAC;QAAAyC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMN,CACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,EACLnC,QAAQ,iBACLd,OAAA;MAAKqC,SAAS,EAAC,eAAe;MAAAC,QAAA,eAC1BtC,OAAA;QAAAsC,QAAA,EAAI;MAAW;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnB,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAAC/C,EAAA,CAjGID,SAAS;AAAAiD,EAAA,GAATjD,SAAS;AAmGf,eAAeA,SAAS;AAAC,IAAAiD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}