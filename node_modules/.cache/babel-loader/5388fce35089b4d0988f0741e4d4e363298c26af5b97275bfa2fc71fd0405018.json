{"ast":null,"code":"var _jsxFileName = \"/Users/yigitdemirel/snake/src/components/SnakeGame.js\",\n  _s = $RefreshSig$();\n// src/SnakeGame.js\nimport React, { useState, useEffect } from 'react';\nimport './SnakeGame.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SnakeGame = () => {\n  _s();\n  const [snake, setSnake] = useState([{\n    x: 12,\n    y: 12\n  }]);\n  const [food, setFood] = useState({\n    x: 5,\n    y: 5\n  });\n  const [direction, setDirection] = useState({\n    x: 1,\n    y: 0\n  }); // Başlangıç yönü sağa doğru\n  const [gameOver, setGameOver] = useState(false);\n  const moveSnake = () => {\n    setSnake(prevSnake => {\n      const newSnake = [...prevSnake];\n      const head = {\n        x: newSnake[0].x + direction.x,\n        y: newSnake[0].y + direction.y\n      };\n\n      // Yılanın kendine çarpmasını kontrol et\n      if (newSnake.some(segment => segment.x === head.x && segment.y === head.y)) {\n        setGameOver(true);\n        return prevSnake; // Oyun bittiğinde yılanı hareket ettirme\n      }\n      newSnake.unshift(head); // Yeni başı ekle\n      // Yılanın yemeyi kontrol et\n      if (head.x === food.x && head.y === food.y) {\n        setFood(generateFoodPosition(newSnake)); // Yeni yiyecek konumunu ayarla\n      } else {\n        newSnake.pop(); // Yılan büyümediği için sonu kes\n      }\n      return newSnake;\n    });\n  };\n  const generateFoodPosition = snake => {\n    let newFood;\n    do {\n      newFood = {\n        x: Math.floor(Math.random() * 25),\n        y: Math.floor(Math.random() * 25)\n      };\n    } while (snake.some(segment => segment.x === newFood.x && segment.y === newFood.y)); // Yılanın üzerine gelmemesi için\n    return newFood;\n  };\n  const handleKeyPress = e => {\n    switch (e.key) {\n      case 'ArrowUp':\n        if (direction.y === 0) setDirection({\n          x: 0,\n          y: -1\n        });\n        break;\n      case 'ArrowDown':\n        if (direction.y === 0) setDirection({\n          x: 0,\n          y: 1\n        });\n        break;\n      case 'ArrowLeft':\n        if (direction.x === 0) setDirection({\n          x: -1,\n          y: 0\n        });\n        break;\n      case 'ArrowRight':\n        if (direction.x === 0) setDirection({\n          x: 1,\n          y: 0\n        });\n        break;\n      default:\n        break;\n    }\n  };\n  useEffect(() => {\n    if (gameOver) return;\n    const interval = setInterval(() => {\n      moveSnake();\n    }, 100); // Yılan her 100 ms'de bir hareket edecek\n\n    window.addEventListener('keydown', handleKeyPress);\n    return () => {\n      clearInterval(interval);\n      window.removeEventListener('keydown', handleKeyPress);\n    };\n  }, [direction, gameOver]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Y\\u0131lan Oyunu\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-area\",\n      children: Array.from({\n        length: 25\n      }).map((_, y) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: Array.from({\n          length: 25\n        }).map((_, x) => {\n          const isSnake = snake.some(segment => segment.x === x && segment.y === y);\n          const isFood = food.x === x && food.y === y;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `cell ${isSnake ? 'snake' : ''} ${isFood ? 'food' : ''}`\n          }, x, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 36\n          }, this);\n        })\n      }, y, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), gameOver && /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Oyun Bitti!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n};\n_s(SnakeGame, \"hDM2yA2SUTTF96Yr85SUQIWQKd8=\");\n_c = SnakeGame;\nexport default SnakeGame;\nvar _c;\n$RefreshReg$(_c, \"SnakeGame\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","SnakeGame","_s","snake","setSnake","x","y","food","setFood","direction","setDirection","gameOver","setGameOver","moveSnake","prevSnake","newSnake","head","some","segment","unshift","generateFoodPosition","pop","newFood","Math","floor","random","handleKeyPress","e","key","interval","setInterval","window","addEventListener","clearInterval","removeEventListener","children","fileName","_jsxFileName","lineNumber","columnNumber","className","Array","from","length","map","_","isSnake","isFood","_c","$RefreshReg$"],"sources":["/Users/yigitdemirel/snake/src/components/SnakeGame.js"],"sourcesContent":["// src/SnakeGame.js\nimport React, { useState, useEffect } from 'react';\nimport './SnakeGame.css';\n\nconst SnakeGame = () => {\n    const [snake, setSnake] = useState([{ x: 12, y: 12 }]);\n    const [food, setFood] = useState({ x: 5, y: 5 });\n    const [direction, setDirection] = useState({ x: 1, y: 0 }); // Başlangıç yönü sağa doğru\n    const [gameOver, setGameOver] = useState(false);\n\n    const moveSnake = () => {\n        setSnake((prevSnake) => {\n            const newSnake = [...prevSnake];\n            const head = { x: newSnake[0].x + direction.x, y: newSnake[0].y + direction.y };\n\n            // Yılanın kendine çarpmasını kontrol et\n            if (newSnake.some((segment) => segment.x === head.x && segment.y === head.y)) {\n                setGameOver(true);\n                return prevSnake; // Oyun bittiğinde yılanı hareket ettirme\n            }\n\n            newSnake.unshift(head); // Yeni başı ekle\n            // Yılanın yemeyi kontrol et\n            if (head.x === food.x && head.y === food.y) {\n                setFood(generateFoodPosition(newSnake)); // Yeni yiyecek konumunu ayarla\n            } else {\n                newSnake.pop(); // Yılan büyümediği için sonu kes\n            }\n            return newSnake;\n        });\n    };\n\n    const generateFoodPosition = (snake) => {\n        let newFood;\n        do {\n            newFood = {\n                x: Math.floor(Math.random() * 25),\n                y: Math.floor(Math.random() * 25),\n            };\n        } while (snake.some((segment) => segment.x === newFood.x && segment.y === newFood.y)); // Yılanın üzerine gelmemesi için\n        return newFood;\n    };\n\n    const handleKeyPress = (e) => {\n        switch (e.key) {\n            case 'ArrowUp':\n                if (direction.y === 0) setDirection({ x: 0, y: -1 });\n                break;\n            case 'ArrowDown':\n                if (direction.y === 0) setDirection({ x: 0, y: 1 });\n                break;\n            case 'ArrowLeft':\n                if (direction.x === 0) setDirection({ x: -1, y: 0 });\n                break;\n            case 'ArrowRight':\n                if (direction.x === 0) setDirection({ x: 1, y: 0 });\n                break;\n            default:\n                break;\n        }\n    };\n\n    useEffect(() => {\n        if (gameOver) return;\n\n        const interval = setInterval(() => {\n            moveSnake();\n        }, 100); // Yılan her 100 ms'de bir hareket edecek\n\n        window.addEventListener('keydown', handleKeyPress);\n\n        return () => {\n            clearInterval(interval);\n            window.removeEventListener('keydown', handleKeyPress);\n        };\n    }, [direction, gameOver]);\n\n    return (\n        <div>\n            <h1>Yılan Oyunu</h1>\n            <div className=\"game-area\">\n                {Array.from({ length: 25 }).map((_, y) =>\n                    <div key={y} className=\"row\">\n                        {Array.from({ length: 25 }).map((_, x) => {\n                            const isSnake = snake.some(segment => segment.x === x && segment.y === y);\n                            const isFood = food.x === x && food.y === y;\n                            return <div key={x} className={`cell ${isSnake ? 'snake' : ''} ${isFood ? 'food' : ''}`} />;\n                        })}\n                    </div>\n                )}\n            </div>\n            {gameOver && <h2>Oyun Bitti!</h2>}\n        </div>\n    );\n};\n\nexport default SnakeGame;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}