{"ast":null,"code":"var _jsxFileName = \"/Users/yigitdemirel/snake/src/components/SnakeGame.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './SnakeGame.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SnakeGame = () => {\n  _s();\n  const [snake, setSnake] = useState([{\n    x: 5,\n    y: 5\n  }]);\n  const [food, setFood] = useState({\n    x: Math.floor(Math.random() * 10),\n    y: Math.floor(Math.random() * 10)\n  });\n  const [direction, setDirection] = useState({\n    x: 0,\n    y: 1\n  });\n  const [gameOver, setGameOver] = useState(false);\n  const [score, setScore] = useState(0);\n  useEffect(() => {\n    const handleKeyPress = e => {\n      switch (e.key) {\n        case 'ArrowUp':\n          setDirection({\n            x: 0,\n            y: -1\n          });\n          break;\n        case 'ArrowDown':\n          setDirection({\n            x: 0,\n            y: 1\n          });\n          break;\n        case 'ArrowLeft':\n          setDirection({\n            x: -1,\n            y: 0\n          });\n          break;\n        case 'ArrowRight':\n          setDirection({\n            x: 1,\n            y: 0\n          });\n          break;\n        default:\n          break;\n      }\n    };\n    window.addEventListener('keydown', handleKeyPress);\n    return () => window.removeEventListener('keydown', handleKeyPress);\n  }, []);\n  useEffect(() => {\n    if (!gameOver) {\n      const moveSnake = setInterval(() => {\n        const newSnake = [...snake];\n        const head = {\n          x: newSnake[0].x + direction.x,\n          y: newSnake[0].y + direction.y\n        };\n        if (head.x === food.x && head.y === food.y) {\n          newSnake.unshift(food);\n          setFood({\n            x: Math.floor(Math.random() * 10),\n            y: Math.floor(Math.random() * 10)\n          });\n          setScore(score + 1);\n        } else {\n          newSnake.pop();\n        }\n        if (head.x < 0 || head.x >= 10 || head.y < 0 || head.y >= 10 || newSnake.slice(1).some(s => s.x === head.x && s.y === head.y)) {\n          setGameOver(true);\n        } else {\n          newSnake.unshift(head);\n          setSnake(newSnake);\n        }\n      }, 200);\n      return () => clearInterval(moveSnake);\n    }\n  }, [snake, direction, food, gameOver]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"snake-game\",\n    children: gameOver ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-over\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Game Over\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Score: \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setSnake([{\n            x: 5,\n            y: 5\n          }]);\n          setDirection({\n            x: 0,\n            y: 1\n          });\n          setFood({\n            x: Math.floor(Math.random() * 10),\n            y: Math.floor(Math.random() * 10)\n          });\n          setScore(0);\n          setGameOver(false);\n        },\n        children: \"Restart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      children: Array.from({\n        length: 10\n      }).map((_, row) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: Array.from({\n          length: 10\n        }).map((_, col) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `cell ${snake.some(s => s.x === col && s.y === row) ? 'snake' : ''} ${food.x === col && food.y === row ? 'food' : ''}`\n        }, col, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }, this))\n      }, row, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(SnakeGame, \"0zazgtmvoi4wpnRuqx1xy6X08aw=\");\n_c = SnakeGame;\nexport default SnakeGame;\nvar _c;\n$RefreshReg$(_c, \"SnakeGame\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","SnakeGame","_s","snake","setSnake","x","y","food","setFood","Math","floor","random","direction","setDirection","gameOver","setGameOver","score","setScore","handleKeyPress","e","key","window","addEventListener","removeEventListener","moveSnake","setInterval","newSnake","head","unshift","pop","slice","some","s","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","Array","from","length","map","_","row","col","_c","$RefreshReg$"],"sources":["/Users/yigitdemirel/snake/src/components/SnakeGame.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './SnakeGame.css';\n\nconst SnakeGame = () => {\n  const [snake, setSnake] = useState([{ x: 5, y: 5 }]);\n  const [food, setFood] = useState({ x: Math.floor(Math.random() * 10), y: Math.floor(Math.random() * 10) });\n  const [direction, setDirection] = useState({ x: 0, y: 1 });\n  const [gameOver, setGameOver] = useState(false);\n  const [score, setScore] = useState(0);\n\n  useEffect(() => {\n    const handleKeyPress = (e) => {\n      switch (e.key) {\n        case 'ArrowUp':\n          setDirection({ x: 0, y: -1 });\n          break;\n        case 'ArrowDown':\n          setDirection({ x: 0, y: 1 });\n          break;\n        case 'ArrowLeft':\n          setDirection({ x: -1, y: 0 });\n          break;\n        case 'ArrowRight':\n          setDirection({ x: 1, y: 0 });\n          break;\n        default:\n          break;\n      }\n    };\n    window.addEventListener('keydown', handleKeyPress);\n    return () => window.removeEventListener('keydown', handleKeyPress);\n  }, []);\n\n  useEffect(() => {\n    if (!gameOver) {\n      const moveSnake = setInterval(() => {\n        const newSnake = [...snake];\n        const head = { x: newSnake[0].x + direction.x, y: newSnake[0].y + direction.y };\n\n        if (head.x === food.x && head.y === food.y) {\n          newSnake.unshift(food);\n          setFood({ x: Math.floor(Math.random() * 10), y: Math.floor(Math.random() * 10) });\n          setScore(score + 1);\n        } else {\n          newSnake.pop();\n        }\n\n        if (head.x < 0 || head.x >= 10 || head.y < 0 || head.y >= 10 || newSnake.slice(1).some(s => s.x === head.x && s.y === head.y)) {\n          setGameOver(true);\n        } else {\n          newSnake.unshift(head);\n          setSnake(newSnake);\n        }\n      }, 200);\n\n      return () => clearInterval(moveSnake);\n    }\n  }, [snake, direction, food, gameOver]);\n\n  return (\n    <div className=\"snake-game\">\n      {gameOver ? (\n        <div className=\"game-over\">\n          <h1>Game Over</h1>\n          <p>Score: {score}</p>\n          <button onClick={() => {\n            setSnake([{ x: 5, y: 5 }]);\n            setDirection({ x: 0, y: 1 });\n            setFood({ x: Math.floor(Math.random() * 10), y: Math.floor(Math.random() * 10) });\n            setScore(0);\n            setGameOver(false);\n          }}>Restart</button>\n        </div>\n      ) : (\n        <div className=\"board\">\n          {Array.from({ length: 10 }).map((_, row) => (\n            <div key={row} className=\"row\">\n              {Array.from({ length: 10 }).map((_, col) => (\n                <div key={col} className={`cell ${snake.some(s => s.x === col && s.y === row) ? 'snake' : ''} ${food.x === col && food.y === row ? 'food' : ''}`}></div>\n              ))}\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default SnakeGame;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}