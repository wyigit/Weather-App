{"ast":null,"code":"var _jsxFileName = \"/Users/yigitdemirel/snake/src/components/SnakeGame.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport '../components/SnakeGame.css'; // CSS dosyanızı burada import edin\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSun, faCloud, faCloudRain, faSnowflake } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [city, setCity] = useState('');\n  const [weather, setWeather] = useState(null);\n  const [error, setError] = useState('');\n  const API_KEY = 'ffe9dc719181aa2bb400d8e5867846a0'; // Buraya kendi API anahtarınızı ekleyin\n\n  const getWeather = async () => {\n    if (!city) return;\n    try {\n      const response = await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}&units=metric`);\n      setWeather(response.data);\n      setError('');\n    } catch (err) {\n      setWeather(null);\n      setError('Şehir bulunamadı!');\n    }\n  };\n  const getWeatherIcon = weatherCondition => {\n    if (weatherCondition.includes('clear')) {\n      return /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faSun,\n        className: \"weather-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 14\n      }, this);\n    } else if (weatherCondition.includes('rain')) {\n      return /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faCloudRain,\n        className: \"weather-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 14\n      }, this);\n    } else if (weatherCondition.includes('cloud')) {\n      return /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faCloud,\n        className: \"weather-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 14\n      }, this);\n    } else if (weatherCondition.includes('snow')) {\n      return /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faSnowflake,\n        className: \"weather-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 14\n      }, this);\n    }\n    return null;\n  };\n  const getWeatherDescription = weatherCondition => {\n    if (weatherCondition.includes('clear')) {\n      return 'Güneşli';\n    } else if (weatherCondition.includes('rain')) {\n      return 'Hafif Yağmurlu';\n    } else if (weatherCondition.includes('cloud')) {\n      return 'Bulutlu';\n    } else if (weatherCondition.includes('snow')) {\n      return 'Karlı';\n    }\n    return 'Bilinmiyor';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hava Durumu Uygulamas\\u0131\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"\\u015Eehir ad\\u0131 girin\",\n      value: city,\n      onChange: e => setCity(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getWeather,\n      children: \"Hava Durumunu Getir\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }, this), weather && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weather-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: weather.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"weather-description\",\n        children: getWeatherDescription(weather.weather[0].description)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), getWeatherIcon(weather.weather[0].description), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"S\\u0131cakl\\u0131k: \", weather.main.temp, \" \\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Hava: \", weather.weather[0].description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"1BF7//Z/qjRy1VMIkjBP8tUeTeU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","FontAwesomeIcon","faSun","faCloud","faCloudRain","faSnowflake","jsxDEV","_jsxDEV","App","_s","city","setCity","weather","setWeather","error","setError","API_KEY","getWeather","response","get","data","err","getWeatherIcon","weatherCondition","includes","icon","className","fileName","_jsxFileName","lineNumber","columnNumber","getWeatherDescription","children","type","placeholder","value","onChange","e","target","onClick","name","description","main","temp","_c","$RefreshReg$"],"sources":["/Users/yigitdemirel/snake/src/components/SnakeGame.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport '../components/SnakeGame.css'; // CSS dosyanızı burada import edin\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSun, faCloud, faCloudRain, faSnowflake } from '@fortawesome/free-solid-svg-icons';\n\nconst App = () => {\n  const [city, setCity] = useState('');\n  const [weather, setWeather] = useState(null);\n  const [error, setError] = useState('');\n\n  const API_KEY = 'ffe9dc719181aa2bb400d8e5867846a0'; // Buraya kendi API anahtarınızı ekleyin\n\n  const getWeather = async () => {\n    if (!city) return;\n\n    try {\n      const response = await axios.get(\n        `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}&units=metric`\n      );\n      setWeather(response.data);\n      setError('');\n    } catch (err) {\n      setWeather(null);\n      setError('Şehir bulunamadı!');\n    }\n  };\n\n  const getWeatherIcon = (weatherCondition) => {\n    if (weatherCondition.includes('clear')) {\n      return <FontAwesomeIcon icon={faSun} className=\"weather-icon\" />;\n    } else if (weatherCondition.includes('rain')) {\n      return <FontAwesomeIcon icon={faCloudRain} className=\"weather-icon\" />;\n    } else if (weatherCondition.includes('cloud')) {\n      return <FontAwesomeIcon icon={faCloud} className=\"weather-icon\" />;\n    } else if (weatherCondition.includes('snow')) {\n      return <FontAwesomeIcon icon={faSnowflake} className=\"weather-icon\" />;\n    }\n    return null;\n  };\n\n  const getWeatherDescription = (weatherCondition) => {\n    if (weatherCondition.includes('clear')) {\n      return 'Güneşli';\n    } else if (weatherCondition.includes('rain')) {\n      return 'Hafif Yağmurlu';\n    } else if (weatherCondition.includes('cloud')) {\n      return 'Bulutlu';\n    } else if (weatherCondition.includes('snow')) {\n      return 'Karlı';\n    }\n    return 'Bilinmiyor';\n  };\n\n  return (\n    <div className=\"app\">\n      <h1>Hava Durumu Uygulaması</h1>\n      <input\n        type=\"text\"\n        placeholder=\"Şehir adı girin\"\n        value={city}\n        onChange={(e) => setCity(e.target.value)}\n      />\n      <button onClick={getWeather}>Hava Durumunu Getir</button>\n\n      {error && <p className=\"error\">{error}</p>}\n      \n      {weather && (\n        <div className=\"weather-info\">\n          <h2>{weather.name}</h2>\n          <p className=\"weather-description\">{getWeatherDescription(weather.weather[0].description)}</p>\n          {getWeatherIcon(weather.weather[0].description)}\n          <p>Sıcaklık: {weather.main.temp} °C</p>\n          <p>Hava: {weather.weather[0].description}</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}