{"ast":null,"code":"var _jsxFileName = \"/Users/yigitdemirel/snake/src/components/SnakeGame.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Game = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const [snake, setSnake] = useState([{\n    x: 50,\n    y: 50\n  }]);\n  const [food, setFood] = useState({\n    x: Math.random() * window.innerWidth,\n    y: Math.random() * window.innerHeight\n  });\n  const [snakeColor, setSnakeColor] = useState('');\n  const [playerName, setPlayerName] = useState('');\n  const [gameStarted, setGameStarted] = useState(false); // Oyun başlangıç durumu\n  const snakeSize = 20;\n  const speed = 2; // Yavaş hareket için hızı düşürüyoruz\n  let dx = speed;\n  let dy = 0;\n  useEffect(() => {\n    if (!gameStarted) return; // Oyun başlamadıysa işlemleri yapma\n\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight;\n    const handleKeydown = e => {\n      switch (e.key) {\n        case 'ArrowUp':\n          dx = 0;\n          dy = -speed;\n          break;\n        case 'ArrowDown':\n          dx = 0;\n          dy = speed;\n          break;\n        case 'ArrowLeft':\n          dx = -speed;\n          dy = 0;\n          break;\n        case 'ArrowRight':\n          dx = speed;\n          dy = 0;\n          break;\n        default:\n          break;\n      }\n    };\n    const gameLoop = () => {\n      const head = {\n        x: snake[0].x + dx,\n        y: snake[0].y + dy\n      };\n\n      // Sınır kontrolü\n      if (head.x < 0 || head.x > canvas.width || head.y < 0 || head.y > canvas.height) {\n        return;\n      }\n\n      // Yemle çarpışma kontrolü\n      if (Math.abs(head.x - food.x) < snakeSize && Math.abs(head.y - food.y) < snakeSize) {\n        setFood({\n          x: Math.random() * canvas.width,\n          y: Math.random() * canvas.height\n        });\n      } else {\n        snake.pop();\n      }\n      snake.unshift(head);\n\n      // Çizim işlemi\n      context.clearRect(0, 0, canvas.width, canvas.height);\n\n      // Yılanı çiz\n      snake.forEach((segment, index) => {\n        context.beginPath();\n        context.arc(segment.x, segment.y, snakeSize / 2, 0, 2 * Math.PI);\n        context.fillStyle = snakeColor || 'green'; // Kullanıcının seçtiği renk\n        context.fill();\n        context.strokeStyle = 'darkgreen';\n        context.stroke();\n      });\n\n      // Yemi çiz\n      context.beginPath();\n      context.arc(food.x, food.y, snakeSize / 2, 0, 2 * Math.PI);\n      context.fillStyle = 'red';\n      context.fill();\n      requestAnimationFrame(gameLoop);\n    };\n    window.addEventListener('keydown', handleKeydown);\n    gameLoop();\n    return () => {\n      window.removeEventListener('keydown', handleKeydown);\n    };\n  }, [gameStarted, snakeColor, snake, food]); // Oyun başladığında ve yılan rengi değiştiğinde yeniden render al\n\n  // Oyun başlatma fonksiyonu\n  const startGame = () => {\n    if (playerName && snakeColor) {\n      setGameStarted(true);\n    } else {\n      alert('Lütfen isminizi ve yılanın rengini seçin.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [!gameStarted && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Oyun Ba\\u015Flamadan \\xD6nce Bilgilerinizi Girin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"\\u0130sim:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: playerName,\n          onChange: e => setPlayerName(e.target.value),\n          placeholder: \"Oyuncu ismi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Y\\u0131lan\\u0131n Rengi:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"color\",\n          value: snakeColor,\n          onChange: e => setSnakeColor(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startGame,\n        disabled: !playerName || !snakeColor,\n        children: \"Play\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this), gameStarted && /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n};\n_s(Game, \"XgRkR9tu9JD8cNaqRUEbbWQzVMU=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","Game","_s","canvasRef","snake","setSnake","x","y","food","setFood","Math","random","window","innerWidth","innerHeight","snakeColor","setSnakeColor","playerName","setPlayerName","gameStarted","setGameStarted","snakeSize","speed","dx","dy","canvas","current","context","getContext","width","height","handleKeydown","e","key","gameLoop","head","abs","pop","unshift","clearRect","forEach","segment","index","beginPath","arc","PI","fillStyle","fill","strokeStyle","stroke","requestAnimationFrame","addEventListener","removeEventListener","startGame","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","placeholder","onClick","disabled","ref","_c","$RefreshReg$"],"sources":["/Users/yigitdemirel/snake/src/components/SnakeGame.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\n\nconst Game = () => {\n  const canvasRef = useRef(null);\n  const [snake, setSnake] = useState([{ x: 50, y: 50 }]);\n  const [food, setFood] = useState({ x: Math.random() * window.innerWidth, y: Math.random() * window.innerHeight });\n  const [snakeColor, setSnakeColor] = useState('');\n  const [playerName, setPlayerName] = useState('');\n  const [gameStarted, setGameStarted] = useState(false); // Oyun başlangıç durumu\n  const snakeSize = 20;\n  const speed = 2; // Yavaş hareket için hızı düşürüyoruz\n  let dx = speed;\n  let dy = 0;\n\n  useEffect(() => {\n    if (!gameStarted) return; // Oyun başlamadıysa işlemleri yapma\n\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight;\n\n    const handleKeydown = (e) => {\n      switch (e.key) {\n        case 'ArrowUp':\n          dx = 0;\n          dy = -speed;\n          break;\n        case 'ArrowDown':\n          dx = 0;\n          dy = speed;\n          break;\n        case 'ArrowLeft':\n          dx = -speed;\n          dy = 0;\n          break;\n        case 'ArrowRight':\n          dx = speed;\n          dy = 0;\n          break;\n        default:\n          break;\n      }\n    };\n\n    const gameLoop = () => {\n      const head = { x: snake[0].x + dx, y: snake[0].y + dy };\n\n      // Sınır kontrolü\n      if (head.x < 0 || head.x > canvas.width || head.y < 0 || head.y > canvas.height) {\n        return;\n      }\n\n      // Yemle çarpışma kontrolü\n      if (Math.abs(head.x - food.x) < snakeSize && Math.abs(head.y - food.y) < snakeSize) {\n        setFood({ x: Math.random() * canvas.width, y: Math.random() * canvas.height });\n      } else {\n        snake.pop();\n      }\n\n      snake.unshift(head);\n\n      // Çizim işlemi\n      context.clearRect(0, 0, canvas.width, canvas.height);\n\n      // Yılanı çiz\n      snake.forEach((segment, index) => {\n        context.beginPath();\n        context.arc(segment.x, segment.y, snakeSize / 2, 0, 2 * Math.PI);\n        context.fillStyle = snakeColor || 'green'; // Kullanıcının seçtiği renk\n        context.fill();\n        context.strokeStyle = 'darkgreen';\n        context.stroke();\n      });\n\n      // Yemi çiz\n      context.beginPath();\n      context.arc(food.x, food.y, snakeSize / 2, 0, 2 * Math.PI);\n      context.fillStyle = 'red';\n      context.fill();\n\n      requestAnimationFrame(gameLoop);\n    };\n\n    window.addEventListener('keydown', handleKeydown);\n    gameLoop();\n\n    return () => {\n      window.removeEventListener('keydown', handleKeydown);\n    };\n  }, [gameStarted, snakeColor, snake, food]); // Oyun başladığında ve yılan rengi değiştiğinde yeniden render al\n\n  // Oyun başlatma fonksiyonu\n  const startGame = () => {\n    if (playerName && snakeColor) {\n      setGameStarted(true);\n    } else {\n      alert('Lütfen isminizi ve yılanın rengini seçin.');\n    }\n  };\n\n  return (\n    <div>\n      {!gameStarted && (\n        <div>\n          <h2>Oyun Başlamadan Önce Bilgilerinizi Girin</h2>\n          <label>\n            İsim:\n            <input\n              type=\"text\"\n              value={playerName}\n              onChange={(e) => setPlayerName(e.target.value)}\n              placeholder=\"Oyuncu ismi\"\n            />\n          </label>\n          <br />\n          <label>\n            Yılanın Rengi:\n            <input\n              type=\"color\"\n              value={snakeColor}\n              onChange={(e) => setSnakeColor(e.target.value)}\n            />\n          </label>\n          <br />\n          <button onClick={startGame} disabled={!playerName || !snakeColor}>\n            Play\n          </button>\n        </div>\n      )}\n      {gameStarted && <canvas ref={canvasRef} />}\n    </div>\n  );\n};\n\nexport default Game;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}