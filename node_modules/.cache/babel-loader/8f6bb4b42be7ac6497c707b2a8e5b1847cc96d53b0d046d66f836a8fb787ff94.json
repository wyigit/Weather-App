{"ast":null,"code":"var _jsxFileName = \"/Users/yigitdemirel/snake/src/components/SnakeGame.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../components/SnakeGame.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GRID_SIZE = 20;\nconst INITIAL_SNAKE = [{\n  x: 10,\n  y: 10\n}];\nconst INITIAL_FOOD = {\n  x: Math.floor(Math.random() * GRID_SIZE),\n  y: Math.floor(Math.random() * GRID_SIZE)\n};\nconst INITIAL_DIRECTION = {\n  x: 0,\n  y: -1\n};\nconst SnakeGame = () => {\n  _s();\n  const [snake, setSnake] = useState(INITIAL_SNAKE);\n  const [food, setFood] = useState(INITIAL_FOOD);\n  const [direction, setDirection] = useState(INITIAL_DIRECTION);\n  const [speed, setSpeed] = useState(200); // Milisaniye bazında\n  const [gameOver, setGameOver] = useState(false);\n\n  // Yılanın yönünü ayarla\n  const handleKeyDown = e => {\n    switch (e.key) {\n      case 'ArrowUp':\n        if (direction.y === 0) setDirection({\n          x: 0,\n          y: -1\n        });\n        break;\n      case 'ArrowDown':\n        if (direction.y === 0) setDirection({\n          x: 0,\n          y: 1\n        });\n        break;\n      case 'ArrowLeft':\n        if (direction.x === 0) setDirection({\n          x: -1,\n          y: 0\n        });\n        break;\n      case 'ArrowRight':\n        if (direction.x === 0) setDirection({\n          x: 1,\n          y: 0\n        });\n        break;\n      default:\n        break;\n    }\n  };\n\n  // Yılanın hareketini güncelle\n  const moveSnake = () => {\n    const newSnake = [...snake];\n    const head = {\n      x: newSnake[0].x + direction.x,\n      y: newSnake[0].y + direction.y\n    };\n\n    // Oyun sonu kontrolü (duvara veya kendine çarpma)\n    if (head.x < 0 || head.x >= GRID_SIZE || head.y < 0 || head.y >= GRID_SIZE || checkCollision(head)) {\n      setGameOver(true);\n      return;\n    }\n    newSnake.unshift(head);\n\n    // Yem yeme kontrolü\n    if (head.x === food.x && head.y === food.y) {\n      setFood({\n        x: Math.floor(Math.random() * GRID_SIZE),\n        y: Math.floor(Math.random() * GRID_SIZE)\n      });\n    } else {\n      newSnake.pop();\n    }\n    setSnake(newSnake);\n  };\n\n  // Çarpma kontrolü (yılan kendine çarpıyor mu)\n  const checkCollision = head => {\n    for (let i = 1; i < snake.length; i++) {\n      if (snake[i].x === head.x && snake[i].y === head.y) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  // Oyun döngüsü\n  useEffect(() => {\n    if (gameOver) return;\n    const intervalId = setInterval(moveSnake, speed);\n    return () => clearInterval(intervalId);\n  }, [snake, direction, gameOver]);\n\n  // Klavye dinleyicisi ekle\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  }, [direction]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: gameOver ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Game Over\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid\",\n      children: Array.from(Array(GRID_SIZE), (_, row) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: Array.from(Array(GRID_SIZE), (_, col) => {\n          const isSnake = snake.some(segment => segment.x === col && segment.y === row);\n          const isFood = food.x === col && food.y === row;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `cell ${isSnake ? 'snake' : ''} ${isFood ? 'food' : ''}`\n          }, col, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 19\n          }, this);\n        })\n      }, row, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s(SnakeGame, \"14Ie4Z44/sdO942WCwgN5YwHfkk=\");\n_c = SnakeGame;\nexport default SnakeGame;\nvar _c;\n$RefreshReg$(_c, \"SnakeGame\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","GRID_SIZE","INITIAL_SNAKE","x","y","INITIAL_FOOD","Math","floor","random","INITIAL_DIRECTION","SnakeGame","_s","snake","setSnake","food","setFood","direction","setDirection","speed","setSpeed","gameOver","setGameOver","handleKeyDown","e","key","moveSnake","newSnake","head","checkCollision","unshift","pop","i","length","intervalId","setInterval","clearInterval","window","addEventListener","removeEventListener","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Array","from","_","row","col","isSnake","some","segment","isFood","_c","$RefreshReg$"],"sources":["/Users/yigitdemirel/snake/src/components/SnakeGame.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport '../components/SnakeGame.css';\n\n\nconst GRID_SIZE = 20;\nconst INITIAL_SNAKE = [{ x: 10, y: 10 }];\nconst INITIAL_FOOD = { x: Math.floor(Math.random() * GRID_SIZE), y: Math.floor(Math.random() * GRID_SIZE) };\nconst INITIAL_DIRECTION = { x: 0, y: -1 };\n\nconst SnakeGame = () => {\n  const [snake, setSnake] = useState(INITIAL_SNAKE);\n  const [food, setFood] = useState(INITIAL_FOOD);\n  const [direction, setDirection] = useState(INITIAL_DIRECTION);\n  const [speed, setSpeed] = useState(200); // Milisaniye bazında\n  const [gameOver, setGameOver] = useState(false);\n\n  // Yılanın yönünü ayarla\n  const handleKeyDown = (e) => {\n    switch (e.key) {\n      case 'ArrowUp':\n        if (direction.y === 0) setDirection({ x: 0, y: -1 });\n        break;\n      case 'ArrowDown':\n        if (direction.y === 0) setDirection({ x: 0, y: 1 });\n        break;\n      case 'ArrowLeft':\n        if (direction.x === 0) setDirection({ x: -1, y: 0 });\n        break;\n      case 'ArrowRight':\n        if (direction.x === 0) setDirection({ x: 1, y: 0 });\n        break;\n      default:\n        break;\n    }\n  };\n\n  // Yılanın hareketini güncelle\n  const moveSnake = () => {\n    const newSnake = [...snake];\n    const head = { x: newSnake[0].x + direction.x, y: newSnake[0].y + direction.y };\n\n    // Oyun sonu kontrolü (duvara veya kendine çarpma)\n    if (head.x < 0 || head.x >= GRID_SIZE || head.y < 0 || head.y >= GRID_SIZE || checkCollision(head)) {\n      setGameOver(true);\n      return;\n    }\n\n    newSnake.unshift(head);\n\n    // Yem yeme kontrolü\n    if (head.x === food.x && head.y === food.y) {\n      setFood({ x: Math.floor(Math.random() * GRID_SIZE), y: Math.floor(Math.random() * GRID_SIZE) });\n    } else {\n      newSnake.pop();\n    }\n\n    setSnake(newSnake);\n  };\n\n  // Çarpma kontrolü (yılan kendine çarpıyor mu)\n  const checkCollision = (head) => {\n    for (let i = 1; i < snake.length; i++) {\n      if (snake[i].x === head.x && snake[i].y === head.y) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  // Oyun döngüsü\n  useEffect(() => {\n    if (gameOver) return;\n    const intervalId = setInterval(moveSnake, speed);\n    return () => clearInterval(intervalId);\n  }, [snake, direction, gameOver]);\n\n  // Klavye dinleyicisi ekle\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  }, [direction]);\n\n  return (\n    <div className=\"game-container\">\n      {gameOver ? (\n        <h1>Game Over</h1>\n      ) : (\n        <div className=\"grid\">\n          {Array.from(Array(GRID_SIZE), (_, row) => (\n            <div key={row} className=\"row\">\n              {Array.from(Array(GRID_SIZE), (_, col) => {\n                const isSnake = snake.some(segment => segment.x === col && segment.y === row);\n                const isFood = food.x === col && food.y === row;\n                return (\n                  <div\n                    key={col}\n                    className={`cell ${isSnake ? 'snake' : ''} ${isFood ? 'food' : ''}`}\n                  />\n                );\n              })}\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default SnakeGame;\n\n\n\n\n\n\n\n\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}