{"ast":null,"code":"var _jsxFileName = \"/Users/yigitdemirel/snake/src/components/SnakeGame.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../components/SnakeGame.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SnakeGame = () => {\n  _s();\n  const initialSnake = [{\n    x: 12,\n    y: 12\n  }];\n  const initialDirection = {\n    x: 1,\n    y: 0\n  };\n  const generateFoodPosition = snake => {\n    let newFood;\n    do {\n      newFood = {\n        x: Math.floor(Math.random() * 25),\n        y: Math.floor(Math.random() * 25)\n      };\n    } while (snake.some(segment => segment.x === newFood.x && segment.y === newFood.y));\n    return newFood;\n  };\n  const restartGame = () => {\n    setTimeout(() => {\n      setSnake(initialSnake);\n      setFood(initialFood);\n      setDirection(initialDirection);\n      setScore(0);\n      setTimeLeft(initialTime);\n      setGameOver(false);\n      setIsStarted(false);\n    }, 5000);\n  };\n  const initialFood = generateFoodPosition(initialSnake); // Generate initial food position\n\n  const [snake, setSnake] = useState(initialSnake);\n  const [food, setFood] = useState(initialFood);\n  const [direction, setDirection] = useState(initialDirection);\n  const [gameOver, setGameOver] = useState(false);\n  const moveSnake = () => {\n    if (gameOver) return;\n    setSnake(prevSnake => {\n      const newSnake = [...prevSnake];\n      const head = {\n        x: newSnake[0].x + direction.x,\n        y: newSnake[0].y + direction.y\n      };\n\n      // Check for collision with itself\n      if (newSnake.some(segment => segment.x === head.x && segment.y === head.y)) {\n        setGameOver(true);\n        return prevSnake;\n      }\n      newSnake.unshift(head);\n      // Check if the snake has eaten the food\n      if (head.x === food.x && head.y === food.y) {\n        setFood(generateFoodPosition(newSnake));\n      } else {\n        newSnake.pop();\n      }\n      return newSnake;\n    });\n  };\n  const handleKeyPress = e => {\n    if (gameOver) return;\n    switch (e.key) {\n      case 'ArrowUp':\n        if (direction.y === 0) setDirection({\n          x: 0,\n          y: -1\n        });\n        break;\n      case 'ArrowDown':\n        if (direction.y === 0) setDirection({\n          x: 0,\n          y: 1\n        });\n        break;\n      case 'ArrowLeft':\n        if (direction.x === 0) setDirection({\n          x: -1,\n          y: 0\n        });\n        break;\n      case 'ArrowRight':\n        if (direction.x === 0) setDirection({\n          x: 1,\n          y: 0\n        });\n        break;\n      default:\n        break;\n    }\n  };\n  useEffect(() => {\n    if (gameOver) return;\n    const interval = setInterval(() => {\n      moveSnake();\n    }, 100);\n    window.addEventListener('keydown', handleKeyPress);\n    return () => {\n      clearInterval(interval);\n      window.removeEventListener('keydown', handleKeyPress);\n    };\n  }, [direction, gameOver]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"score-timer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"score\",\n        children: [\"Score: \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timer\",\n        children: [\"Time Left: \", timeLeft, \" s\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), !isStarted ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"start-box\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startGame,\n        className: \"start-button\",\n        children: \"Oyunu Ba\\u015Flat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-area\",\n      children: Array.from({\n        length: 25\n      }).map((_, y) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: Array.from({\n          length: 25\n        }).map((_, x) => {\n          const isSnake = snake.some(segment => segment.x === x && segment.y === y);\n          const isFood = food.x === x && food.y === y;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `cell ${isSnake ? 'snake' : ''} ${isFood ? 'food' : ''}`\n          }, x, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 40\n          }, this);\n        })\n      }, y, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }, this), gameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-over-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Oyun Bitti!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Score: \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: restartGame,\n        className: \"restart-button\",\n        children: \"Restart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 9\n  }, this);\n};\n_s(SnakeGame, \"7TXfMD8cuA4vpjPgDWPySDa6Kzs=\");\n_c = SnakeGame;\nexport default SnakeGame;\nvar _c;\n$RefreshReg$(_c, \"SnakeGame\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","SnakeGame","_s","initialSnake","x","y","initialDirection","generateFoodPosition","snake","newFood","Math","floor","random","some","segment","restartGame","setTimeout","setSnake","setFood","initialFood","setDirection","setScore","setTimeLeft","initialTime","setGameOver","setIsStarted","food","direction","gameOver","moveSnake","prevSnake","newSnake","head","unshift","pop","handleKeyPress","e","key","interval","setInterval","window","addEventListener","clearInterval","removeEventListener","className","children","score","fileName","_jsxFileName","lineNumber","columnNumber","timeLeft","isStarted","onClick","startGame","Array","from","length","map","_","isSnake","isFood","_c","$RefreshReg$"],"sources":["/Users/yigitdemirel/snake/src/components/SnakeGame.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport '../components/SnakeGame.css';\n\nconst SnakeGame = () => {\n    const initialSnake = [{ x: 12, y: 12 }];\n    const initialDirection = { x: 1, y: 0 };\n\n    const generateFoodPosition = (snake) => {\n        let newFood;\n        do {\n            newFood = {\n                x: Math.floor(Math.random() * 25),\n                y: Math.floor(Math.random() * 25),\n            };\n        } while (snake.some((segment) => segment.x === newFood.x && segment.y === newFood.y)); \n        return newFood;\n    };\n\n    const restartGame = () => {\n        setTimeout(() => {\n            setSnake(initialSnake);\n            setFood(initialFood);\n            setDirection(initialDirection);\n            setScore(0); \n            setTimeLeft(initialTime); \n            setGameOver(false);\n            setIsStarted(false); \n        }, 5000); \n    };\n\n\n    const initialFood = generateFoodPosition(initialSnake); // Generate initial food position\n\n    const [snake, setSnake] = useState(initialSnake);\n    const [food, setFood] = useState(initialFood);\n    const [direction, setDirection] = useState(initialDirection);\n    const [gameOver, setGameOver] = useState(false);\n\n    const moveSnake = () => {\n        if (gameOver) return;\n\n        setSnake((prevSnake) => {\n            const newSnake = [...prevSnake];\n            const head = { x: newSnake[0].x + direction.x, y: newSnake[0].y + direction.y };\n\n            // Check for collision with itself\n            if (newSnake.some((segment) => segment.x === head.x && segment.y === head.y)) {\n                setGameOver(true);\n                return prevSnake; \n            }\n\n            newSnake.unshift(head); \n            // Check if the snake has eaten the food\n            if (head.x === food.x && head.y === food.y) {\n                setFood(generateFoodPosition(newSnake)); \n            } else {\n                newSnake.pop(); \n            }\n            return newSnake;\n        });\n    };\n\n    const handleKeyPress = (e) => {\n        if (gameOver) return; \n\n        switch (e.key) {\n            case 'ArrowUp':\n                if (direction.y === 0) setDirection({ x: 0, y: -1 });\n                break;\n            case 'ArrowDown':\n                if (direction.y === 0) setDirection({ x: 0, y: 1 });\n                break;\n            case 'ArrowLeft':\n                if (direction.x === 0) setDirection({ x: -1, y: 0 });\n                break;\n            case 'ArrowRight':\n                if (direction.x === 0) setDirection({ x: 1, y: 0 });\n                break;\n            default:\n                break;\n        }\n    };\n\n    useEffect(() => {\n        if (gameOver) return; \n\n        const interval = setInterval(() => {\n            moveSnake();\n        }, 100);\n\n        window.addEventListener('keydown', handleKeyPress);\n\n        return () => {\n            clearInterval(interval);\n            window.removeEventListener('keydown', handleKeyPress);\n        };\n    }, [direction, gameOver]);\n\n    return (\n        <div className=\"game-container\">\n            <div className=\"score-timer\">\n                <div className=\"score\">Score: {score}</div>\n                <div className=\"timer\">Time Left: {timeLeft} s</div>\n            </div>\n            {!isStarted ? ( \n                <div className=\"start-box\">\n                    <button onClick={startGame} className=\"start-button\">Oyunu Başlat</button>\n                </div>\n            ) : (\n                <div className=\"game-area\">\n                    {Array.from({ length: 25 }).map((_, y) =>\n                        <div key={y} className=\"row\">\n                            {Array.from({ length: 25 }).map((_, x) => {\n                                const isSnake = snake.some(segment => segment.x === x && segment.y === y);\n                                const isFood = food.x === x && food.y === y;\n                                return <div key={x} className={`cell ${isSnake ? 'snake' : ''} ${isFood ? 'food' : ''}`} />;\n                            })}\n                        </div>\n                    )}\n                </div>\n            )}\n            {gameOver && (\n                <div className=\"game-over-box\">\n                    <h2>Oyun Bitti!</h2>\n                    <p>Score: {score}</p>\n                    <button onClick={restartGame} className=\"restart-button\">Restart</button>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default SnakeGame;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}