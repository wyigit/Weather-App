{"ast":null,"code":"var _jsxFileName = \"/Users/yigitdemirel/snake/src/components/SnakeGame.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SnakeGame = () => {\n  _s();\n  const initialSnake = [{\n    x: 12,\n    y: 12\n  }];\n  const initialDirection = {\n    x: 1,\n    y: 0\n  };\n  const initialFood = {\n    x: 5,\n    y: 5\n  };\n  const initialTime = 30;\n  const [snake, setSnake] = useState(initialSnake);\n  const [food, setFood] = useState(initialFood);\n  const [direction, setDirection] = useState(initialDirection);\n  const [gameOver, setGameOver] = useState(false);\n  const [score, setScore] = useState(0);\n  const [timeLeft, setTimeLeft] = useState(initialTime);\n  const [isStarted, setIsStarted] = useState(false);\n  const moveSnake = () => {\n    if (gameOver || !isStarted) return;\n    setSnake(prevSnake => {\n      const newSnake = [...prevSnake];\n      const head = {\n        x: newSnake[0].x + direction.x,\n        y: newSnake[0].y + direction.y\n      };\n      if (newSnake.some(segment => segment.x === head.x && segment.y === head.y)) {\n        setGameOver(true);\n        return prevSnake;\n      }\n      newSnake.unshift(head);\n      if (head.x === food.x && head.y === food.y) {\n        setFood(generateFoodPosition(newSnake));\n        setScore(prevScore => prevScore + 1);\n      } else {\n        newSnake.pop();\n      }\n      return newSnake;\n    });\n  };\n  const generateFoodPosition = snake => {\n    let newFood;\n    do {\n      newFood = {\n        x: Math.floor(Math.random() * 25),\n        y: Math.floor(Math.random() * 25)\n      };\n    } while (snake.some(segment => segment.x === newFood.x && segment.y === newFood.y));\n    return newFood;\n  };\n  const handleKeyPress = e => {\n    if (gameOver || !isStarted) return;\n    switch (e.key) {\n      case 'ArrowUp':\n        if (direction.y === 0) setDirection({\n          x: 0,\n          y: -1\n        });\n        break;\n      case 'ArrowDown':\n        if (direction.y === 0) setDirection({\n          x: 0,\n          y: 1\n        });\n        break;\n      case 'ArrowLeft':\n        if (direction.x === 0) setDirection({\n          x: -1,\n          y: 0\n        });\n        break;\n      case 'ArrowRight':\n        if (direction.x === 0) setDirection({\n          x: 1,\n          y: 0\n        });\n        break;\n      default:\n        break;\n    }\n  };\n  useEffect(() => {\n    if (gameOver || timeLeft <= 0 || !isStarted) return;\n    const interval = setInterval(() => {\n      moveSnake();\n    }, 100);\n    window.addEventListener('keydown', handleKeyPress);\n    return () => {\n      clearInterval(interval);\n      window.removeEventListener('keydown', handleKeyPress);\n    };\n  }, [direction, gameOver, timeLeft, isStarted]);\n  useEffect(() => {\n    if (!isStarted || gameOver) return;\n    const timerInterval = setInterval(() => {\n      setTimeLeft(prevTime => prevTime - 1);\n    }, 1000);\n    if (timeLeft === 0) {\n      setGameOver(true);\n    }\n    return () => clearInterval(timerInterval);\n  }, [timeLeft, gameOver, isStarted]);\n  const restartGame = () => {\n    setSnake(initialSnake);\n    setFood(initialFood);\n    setDirection(initialDirection);\n    setScore(0);\n    setTimeLeft(initialTime);\n    setGameOver(false);\n    setIsStarted(false);\n  };\n  const startGame = () => {\n    setIsStarted(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"score-timer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"score\",\n        children: [\"Score: \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timer\",\n        children: [\"Time Left: \", timeLeft, \" s\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 5\n    }, this), !isStarted ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"start-box\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startGame,\n        className: \"start-button\",\n        children: \"Oyunu Ba\\u015Flat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-area\",\n      children: Array.from({\n        length: 25\n      }).map((_, y) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: Array.from({\n          length: 25\n        }).map((_, x) => {\n          const isSnake = snake.some(segment => segment.x === x && segment.y === y);\n          const isFood = food.x === x && food.y === y;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `cell ${isSnake ? 'snake' : ''} ${isFood ? 'food' : ''}`\n          }, x, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 32\n          }, this);\n        })\n      }, y, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }, this), gameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-over-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Oyun Bitti!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Score: \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: restartGame,\n        className: \"restart-button\",\n        children: \"Restart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n};\n_s(SnakeGame, \"uN5+RUyMPZxL56WHA1XAoqyT30o=\");\n_c = SnakeGame;\nexport default SnakeGame;\nvar _c;\n$RefreshReg$(_c, \"SnakeGame\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","SnakeGame","_s","initialSnake","x","y","initialDirection","initialFood","initialTime","snake","setSnake","food","setFood","direction","setDirection","gameOver","setGameOver","score","setScore","timeLeft","setTimeLeft","isStarted","setIsStarted","moveSnake","prevSnake","newSnake","head","some","segment","unshift","generateFoodPosition","prevScore","pop","newFood","Math","floor","random","handleKeyPress","e","key","useEffect","interval","setInterval","window","addEventListener","clearInterval","removeEventListener","timerInterval","prevTime","restartGame","startGame","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","Array","from","length","map","_","isSnake","isFood","_c","$RefreshReg$"],"sources":["/Users/yigitdemirel/snake/src/components/SnakeGame.js"],"sourcesContent":["import React, { useState } from 'react'\n\nconst SnakeGame = () => {\n\n    const initialSnake = [{ x: 12, y: 12 }];\n    const initialDirection = { x: 1, y: 0 };\n    const initialFood = { x: 5, y: 5 };\n    const initialTime = 30; \n\n    const [snake, setSnake] = useState(initialSnake);\n    const [food, setFood] = useState(initialFood);\n    const [direction, setDirection] = useState(initialDirection);\n    const [gameOver, setGameOver] = useState(false);\n    const [score, setScore] = useState(0);\n    const [timeLeft, setTimeLeft] = useState(initialTime); \n    const [isStarted, setIsStarted] = useState(false); \n\n    const moveSnake = () => {\n        if (gameOver || !isStarted) return;\n\n        setSnake((prevSnake) => {\n            const newSnake = [...prevSnake];\n            const head = { x: newSnake[0].x + direction.x, y: newSnake[0].y + direction.y };\n\n            if (newSnake.some((segment) => segment.x === head.x && segment.y === head.y)) {\n                setGameOver(true);\n                return prevSnake; \n            }\n\n            newSnake.unshift(head); \n            if (head.x === food.x && head.y === food.y) {\n                setFood(generateFoodPosition(newSnake)); \n                setScore((prevScore) => prevScore + 1); \n            } else {\n                newSnake.pop(); \n            }\n            return newSnake;\n        });\n    };\n\n    const generateFoodPosition = (snake) => {\n        let newFood;\n        do {\n            newFood = {\n                x: Math.floor(Math.random() * 25),\n                y: Math.floor(Math.random() * 25),\n            };\n        } while (snake.some((segment) => segment.x === newFood.x && segment.y === newFood.y)); \n        return newFood;\n    };\n\n    const handleKeyPress = (e) => {\n        if (gameOver || !isStarted) return; \n\n        switch (e.key) {\n            case 'ArrowUp':\n                if (direction.y === 0) setDirection({ x: 0, y: -1 });\n                break;\n            case 'ArrowDown':\n                if (direction.y === 0) setDirection({ x: 0, y: 1 });\n                break;\n            case 'ArrowLeft':\n                if (direction.x === 0) setDirection({ x: -1, y: 0 });\n                break;\n            case 'ArrowRight':\n                if (direction.x === 0) setDirection({ x: 1, y: 0 });\n                break;\n            default:\n                break;\n        }\n    };\n\n    useEffect(() => {\n        if (gameOver || timeLeft <= 0 || !isStarted) return; \n\n        const interval = setInterval(() => {\n            moveSnake();\n        }, 100);\n\n        window.addEventListener('keydown', handleKeyPress);\n\n        return () => {\n            clearInterval(interval);\n            window.removeEventListener('keydown', handleKeyPress);\n        };\n    }, [direction, gameOver, timeLeft, isStarted]);\n\n    useEffect(() => {\n        if (!isStarted || gameOver) return;\n\n        const timerInterval = setInterval(() => {\n            setTimeLeft((prevTime) => prevTime - 1);\n        }, 1000);\n\n        if (timeLeft === 0) {\n            setGameOver(true); \n        }\n\n        return () => clearInterval(timerInterval);\n    }, [timeLeft, gameOver, isStarted]);\n\n    const restartGame = () => {\n        setSnake(initialSnake);\n        setFood(initialFood);\n        setDirection(initialDirection);\n        setScore(0); \n        setTimeLeft(initialTime); \n        setGameOver(false);\n        setIsStarted(false); \n    };\n\n    const startGame = () => {\n        setIsStarted(true);\n    };\n\n  return (\n    <div className=\"game-container\">\n    <div className=\"score-timer\">\n        <div className=\"score\">Score: {score}</div> {}\n        <div className=\"timer\">Time Left: {timeLeft} s</div> {}\n    </div>\n    {!isStarted ? ( \n        <div className=\"start-box\">\n            <button onClick={startGame} className=\"start-button\">Oyunu Başlat</button>\n        </div>\n    ) : (\n        <div className=\"game-area\">\n            {Array.from({ length: 25 }).map((_, y) =>\n                <div key={y} className=\"row\">\n                    {Array.from({ length: 25 }).map((_, x) => {\n                        const isSnake = snake.some(segment => segment.x === x && segment.y === y);\n                        const isFood = food.x === x && food.y === y;\n                        return <div key={x} className={`cell ${isSnake ? 'snake' : ''} ${isFood ? 'food' : ''}`} />;\n                    })}\n                </div>\n            )}\n        </div>\n    )}\n    {gameOver && (\n        <div className=\"game-over-box\">\n            <h2>Oyun Bitti!</h2>\n            <p>Score: {score}</p>\n            <button onClick={restartGame} className=\"restart-button\">Restart</button>\n        </div>\n    )}\n</div>\n)}\n\nexport default SnakeGame;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}