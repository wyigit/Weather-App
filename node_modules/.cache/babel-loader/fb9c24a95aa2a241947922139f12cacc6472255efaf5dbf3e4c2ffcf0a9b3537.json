{"ast":null,"code":"var _jsxFileName = \"/Users/yigitdemirel/snake/src/components/WeatherApp.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './WeatherApp.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WeatherApp = () => {\n  _s();\n  const [city, setCity] = useState('');\n  const [weather, setWeather] = useState(null);\n  const [error, setError] = useState('');\n  const API_KEY = 'ffe9dc719181aa2bb400d8e5867846a0'; // Use your API key here\n\n  const getWeather = async () => {\n    if (!city) return;\n    try {\n      const response = await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}&units=metric`);\n      setWeather(response.data);\n      setError('');\n    } catch (err) {\n      setWeather(null);\n      setError('City not found!');\n    }\n  };\n  const getWeatherIcon = iconCode => {\n    const iconUrl = `https://openweathermap.org/img/wn/${iconCode}@2x.png`;\n    return /*#__PURE__*/_jsxDEV(\"img\", {\n      src: iconUrl,\n      alt: \"Weather Icon\",\n      className: \"weather-icon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 12\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter city name\",\n        value: city,\n        onChange: e => setCity(e.target.value),\n        className: \"search-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: getWeather,\n        className: \"search-button\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 19\n      }, this), weather && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `weather-info ${weather.weather[0].main.toLowerCase()}`,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"city-name\",\n          children: weather.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), getWeatherIcon(weather.weather[0].icon), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"temperature-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"temperature\",\n            children: [weather.main.temp, \" \\xB0C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"weather-description\",\n            children: weather.weather[0].description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(WeatherApp, \"1BF7//Z/qjRy1VMIkjBP8tUeTeU=\");\n_c = WeatherApp;\nexport default WeatherApp;\nvar _c;\n$RefreshReg$(_c, \"WeatherApp\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","WeatherApp","_s","city","setCity","weather","setWeather","error","setError","API_KEY","getWeather","response","get","data","err","getWeatherIcon","iconCode","iconUrl","src","alt","className","fileName","_jsxFileName","lineNumber","columnNumber","children","type","placeholder","value","onChange","e","target","onClick","main","toLowerCase","name","icon","temp","description","_c","$RefreshReg$"],"sources":["/Users/yigitdemirel/snake/src/components/WeatherApp.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport './WeatherApp.css';\n\nconst WeatherApp = () => {\n  const [city, setCity] = useState('');\n  const [weather, setWeather] = useState(null);\n  const [error, setError] = useState('');\n\n  const API_KEY = 'ffe9dc719181aa2bb400d8e5867846a0'; // Use your API key here\n\n  const getWeather = async () => {\n    if (!city) return;\n\n    try {\n      const response = await axios.get(\n        `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}&units=metric`\n      );\n      setWeather(response.data);\n      setError('');\n    } catch (err) {\n      setWeather(null);\n      setError('City not found!');\n    }\n  };\n\n  const getWeatherIcon = (iconCode) => {\n    const iconUrl = `https://openweathermap.org/img/wn/${iconCode}@2x.png`;\n    return <img src={iconUrl} alt=\"Weather Icon\" className=\"weather-icon\" />;\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"app-box\">\n        <input\n          type=\"text\"\n          placeholder=\"Enter city name\"\n          value={city}\n          onChange={(e) => setCity(e.target.value)}\n          className=\"search-input\"\n        />\n        <button onClick={getWeather} className=\"search-button\">Search</button>\n\n        {error && <p className=\"error\">{error}</p>}\n        \n        {weather && (\n          <div className={`weather-info ${weather.weather[0].main.toLowerCase()}`}>\n            <h2 className=\"city-name\">{weather.name}</h2>\n            {getWeatherIcon(weather.weather[0].icon)} {/* Use icon code from API response */}\n            <div className=\"temperature-container\">\n              <span className=\"temperature\">{weather.main.temp} Â°C</span>\n              <span className=\"weather-description\">{weather.weather[0].description}</span>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default WeatherApp;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}