{"ast":null,"code":"var _jsxFileName = \"/Users/yigitdemirel/snake/src/components/SnakeGame.js\",\n  _s = $RefreshSig$();\n// src/SnakeGame.js\nimport React, { useState, useEffect } from 'react';\nimport './SnakeGame.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SnakeGame = () => {\n  _s();\n  const initialSnake = [{\n    x: 12,\n    y: 12\n  }];\n  const initialDirection = {\n    x: 1,\n    y: 0\n  };\n  const initialFood = {\n    x: 5,\n    y: 5\n  };\n  const [snake, setSnake] = useState(initialSnake);\n  const [food, setFood] = useState(initialFood);\n  const [direction, setDirection] = useState(initialDirection);\n  const [gameOver, setGameOver] = useState(false);\n  const [score, setScore] = useState(0); // Puan durumu\n\n  const moveSnake = () => {\n    setSnake(prevSnake => {\n      const newSnake = [...prevSnake];\n      const head = {\n        x: newSnake[0].x + direction.x,\n        y: newSnake[0].y + direction.y\n      };\n\n      // Yılanın kendine çarpmasını kontrol et\n      if (newSnake.some(segment => segment.x === head.x && segment.y === head.y)) {\n        setGameOver(true);\n        return prevSnake; // Oyun bittiğinde yılanı hareket ettirme\n      }\n      newSnake.unshift(head); // Yeni başı ekle\n      // Yılanın yemeyi kontrol et\n      if (head.x === food.x && head.y === food.y) {\n        setFood(generateFoodPosition(newSnake)); // Yeni yiyecek konumunu ayarla\n        setScore(prevScore => prevScore + 1); // Puanı 1 artır\n      } else {\n        newSnake.pop(); // Yılan büyümediği için sonu kes\n      }\n      return newSnake;\n    });\n  };\n  const generateFoodPosition = snake => {\n    let newFood;\n    do {\n      newFood = {\n        x: Math.floor(Math.random() * 25),\n        y: Math.floor(Math.random() * 25)\n      };\n    } while (snake.some(segment => segment.x === newFood.x && segment.y === newFood.y)); // Yılanın üzerine gelmemesi için\n    return newFood;\n  };\n  const handleKeyPress = e => {\n    switch (e.key) {\n      case 'ArrowUp':\n        if (direction.y === 0) setDirection({\n          x: 0,\n          y: -1\n        });\n        break;\n      case 'ArrowDown':\n        if (direction.y === 0) setDirection({\n          x: 0,\n          y: 1\n        });\n        break;\n      case 'ArrowLeft':\n        if (direction.x === 0) setDirection({\n          x: -1,\n          y: 0\n        });\n        break;\n      case 'ArrowRight':\n        if (direction.x === 0) setDirection({\n          x: 1,\n          y: 0\n        });\n        break;\n      default:\n        break;\n    }\n  };\n  useEffect(() => {\n    if (gameOver) return;\n    const interval = setInterval(() => {\n      moveSnake();\n    }, 100);\n    window.addEventListener('keydown', handleKeyPress);\n    return () => {\n      clearInterval(interval);\n      window.removeEventListener('keydown', handleKeyPress);\n    };\n  }, [direction, gameOver]);\n  const restartGame = () => {\n    setSnake(initialSnake);\n    setFood(initialFood);\n    setDirection(initialDirection);\n    setScore(0); // Puanı sıfırla\n    setGameOver(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"score\",\n      children: [\"Score: \", score]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-area\",\n      children: Array.from({\n        length: 25\n      }).map((_, y) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: Array.from({\n          length: 25\n        }).map((_, x) => {\n          const isSnake = snake.some(segment => segment.x === x && segment.y === y);\n          const isFood = food.x === x && food.y === y;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `cell ${isSnake ? 'snake' : ''} ${isFood ? 'food' : ''}`\n          }, x, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 36\n          }, this);\n        })\n      }, y, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), gameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-over\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Game Over! Score: \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: restartGame,\n        className: \"restart-button\",\n        children: \"Restart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 9\n  }, this);\n};\n_s(SnakeGame, \"Mr8tC39SAjuqRi8A757FNGRxGSM=\");\n_c = SnakeGame;\nexport default SnakeGame;\nvar _c;\n$RefreshReg$(_c, \"SnakeGame\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","SnakeGame","_s","initialSnake","x","y","initialDirection","initialFood","snake","setSnake","food","setFood","direction","setDirection","gameOver","setGameOver","score","setScore","moveSnake","prevSnake","newSnake","head","some","segment","unshift","generateFoodPosition","prevScore","pop","newFood","Math","floor","random","handleKeyPress","e","key","interval","setInterval","window","addEventListener","clearInterval","removeEventListener","restartGame","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Array","from","length","map","_","isSnake","isFood","onClick","_c","$RefreshReg$"],"sources":["/Users/yigitdemirel/snake/src/components/SnakeGame.js"],"sourcesContent":["// src/SnakeGame.js\nimport React, { useState, useEffect } from 'react';\nimport './SnakeGame.css';\n\nconst SnakeGame = () => {\n    const initialSnake = [{ x: 12, y: 12 }];\n    const initialDirection = { x: 1, y: 0 };\n    const initialFood = { x: 5, y: 5 };\n\n    const [snake, setSnake] = useState(initialSnake);\n    const [food, setFood] = useState(initialFood);\n    const [direction, setDirection] = useState(initialDirection);\n    const [gameOver, setGameOver] = useState(false);\n    const [score, setScore] = useState(0); // Puan durumu\n\n    const moveSnake = () => {\n        setSnake((prevSnake) => {\n            const newSnake = [...prevSnake];\n            const head = { x: newSnake[0].x + direction.x, y: newSnake[0].y + direction.y };\n\n            // Yılanın kendine çarpmasını kontrol et\n            if (newSnake.some((segment) => segment.x === head.x && segment.y === head.y)) {\n                setGameOver(true);\n                return prevSnake; // Oyun bittiğinde yılanı hareket ettirme\n            }\n\n            newSnake.unshift(head); // Yeni başı ekle\n            // Yılanın yemeyi kontrol et\n            if (head.x === food.x && head.y === food.y) {\n                setFood(generateFoodPosition(newSnake)); // Yeni yiyecek konumunu ayarla\n                setScore((prevScore) => prevScore + 1); // Puanı 1 artır\n            } else {\n                newSnake.pop(); // Yılan büyümediği için sonu kes\n            }\n            return newSnake;\n        });\n    };\n\n    const generateFoodPosition = (snake) => {\n        let newFood;\n        do {\n            newFood = {\n                x: Math.floor(Math.random() * 25),\n                y: Math.floor(Math.random() * 25),\n            };\n        } while (snake.some((segment) => segment.x === newFood.x && segment.y === newFood.y)); // Yılanın üzerine gelmemesi için\n        return newFood;\n    };\n\n    const handleKeyPress = (e) => {\n        switch (e.key) {\n            case 'ArrowUp':\n                if (direction.y === 0) setDirection({ x: 0, y: -1 });\n                break;\n            case 'ArrowDown':\n                if (direction.y === 0) setDirection({ x: 0, y: 1 });\n                break;\n            case 'ArrowLeft':\n                if (direction.x === 0) setDirection({ x: -1, y: 0 });\n                break;\n            case 'ArrowRight':\n                if (direction.x === 0) setDirection({ x: 1, y: 0 });\n                break;\n            default:\n                break;\n        }\n    };\n\n    useEffect(() => {\n        if (gameOver) return;\n\n        const interval = setInterval(() => {\n            moveSnake();\n        }, 100);\n\n        window.addEventListener('keydown', handleKeyPress);\n\n        return () => {\n            clearInterval(interval);\n            window.removeEventListener('keydown', handleKeyPress);\n        };\n    }, [direction, gameOver]);\n\n    const restartGame = () => {\n        setSnake(initialSnake);\n        setFood(initialFood);\n        setDirection(initialDirection);\n        setScore(0); // Puanı sıfırla\n        setGameOver(false);\n    };\n\n    return (\n        <div className=\"game-container\">\n            <div className=\"score\">Score: {score}</div> {/* Sadece score gösterimi */}\n            <div className=\"game-area\">\n                {Array.from({ length: 25 }).map((_, y) =>\n                    <div key={y} className=\"row\">\n                        {Array.from({ length: 25 }).map((_, x) => {\n                            const isSnake = snake.some(segment => segment.x === x && segment.y === y);\n                            const isFood = food.x === x && food.y === y;\n                            return <div key={x} className={`cell ${isSnake ? 'snake' : ''} ${isFood ? 'food' : ''}`} />;\n                        })}\n                    </div>\n                )}\n            </div>\n            {gameOver && (\n                <div className=\"game-over\">\n                    <h2>Game Over! Score: {score}</h2>\n                    <button onClick={restartGame} className=\"restart-button\">Restart</button>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default SnakeGame;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}